{"version":3,"sources":["components/Shared/icon/Icon.tsx","components/Shared/InputIcon/InputIcon.tsx","components/Shared/Button/Button.tsx","components/Login/LoginModal.tsx","redux/user/user.actions.ts","components/Login/Login.container.tsx","redux/user-todos/user-todo.actions.ts","components/Dashboard/TodoCard.tsx","components/Dashboard/TodoCard.container.tsx","components/Dashboard/TodosList.tsx","components/Shared/FailedFetch/FailedFetch.tsx","components/Dashboard/SearchBar.tsx","components/Dashboard/FilterOption.tsx","components/Dashboard/FilterOptions.tsx","components/Dashboard/UserFilterOptions.container.tsx","components/Shared/LoadingSpinner/LoadingSpinner.tsx","components/Dashboard/UserDashboard.container.tsx","components/Navbar/HamburgerBars.tsx","components/Navbar/NavContentSection.tsx","components/Navbar/NavContent.tsx","components/Navbar/NavbarSmall.tsx","components/Navbar/NavbarDesktop.tsx","components/Navbar/Navbar.container.tsx","components/Shared/UserProfile/UserProfile.tsx","components/Shared/NotificationsDropdown/NotificationCard.tsx","components/Shared/NotificationsDropdown/NotificationCard.container.tsx","components/Shared/NotificationsDropdown/NotificationDropdownList.tsx","components/Shared/IconHover/IconHover.tsx","utils/api/notifications.ts","components/Dashboard/UserProfile.container.tsx","redux/notifications/notifications.actions.ts","components/Dashboard/PublicChatMessage.tsx","utils/scroll/scrollToBottom.ts","components/Dashboard/PublicChatList.tsx","components/Dashboard/PublicChat.container.tsx","redux/dashboard-chat/dashboard-chat.types.ts","components/Shared/Container/Container.tsx","components/Shared/Layout/Layout.tsx","Portals/Portal.js","components/Shared/modal/Modal.tsx","components/CreateTodo/DropdownSelect.tsx","utils/api/users.ts","utils/api/todos.ts","components/Shared/input/Input.tsx","components/Shared/InputLabel/InputLabel.tsx","components/Shared/Textarea/Textarea.tsx","utils/api/timeline.ts","components/CreateTodo/CreateTodo.container.tsx","components/Chat/ChatBubble.tsx","components/Chat/ChatProfileImg.tsx","components/Chat/TeamMessage.tsx","components/Chat/TeamMessageList.tsx","redux/team-chat/team-chat.actions.ts","utils/api/messages.ts","components/Shared/IconColor/IconColor.tsx","components/Chat/WriteMessageToolbar.tsx","components/Chat/TeamChat.container.tsx","components/Dashboard/TodoCard.skeleton.tsx","redux/team-todos/team-todos.actions.ts","components/Dashboard/TeamFilterOptions.container.tsx","components/Dashboard/TeamDashboard.container.tsx","components/Shared/FullscreenModal/FullscreenModal.tsx","components/TodoInfo/EditTodo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoInfo/TodoTimeline.tsx","components/TodoInfo/TimelineList.tsx","components/Shared/ModalConfirm/ModalConfirm.tsx","components/TodoInfo/TodoInfo.container.tsx","PrivateRoutes.tsx","App.tsx","serviceWorker.ts","redux/user/user.reducer.ts","redux/user-todos/user-todo.reducer.ts","redux/team-chat/team-chat.reducer.ts","redux/notifications/notifications.reducer.ts","redux/team-todos/team-todos.reducer.ts","redux/dashboard-chat/dashboard-chat.reducer.ts","redux/root-reducer.ts","redux/store.ts","index.tsx","media/hero.jpg","media/loading-spinner.svg","media/placeholder-user.svg"],"names":["Icon","icon","InputIcon","placeholder","onChange","value","type","className","event","target","Button","onClick","text","loading","disabled","LoginModal","onChangeEmail","emailIcon","passwordIcon","onChangePassword","emailValue","passwordValue","error","loginRequestSucess","user","connect","state","userInfo","authenticated","dispatch","startLoginUser","getState","a","email","password","axios","post","response","data","width","useWindowWidth","useState","setEmail","setPassword","history","useHistory","useEffect","handleLoginSuccess","push","src","hero","alt","handleEmailChange","handlePasswordChange","id","fetchTodosSuccess","todos","setFilter","filter","setSort","sort","TodoCard","title","urgency","difficulty","createdAt","updatedAt","category","onMouseEnter","onMouseLeave","triggerPopup","to","format","TodoCardContainer","togglePopup","setTogglePopup","userName","map","todo","_id","name","FailedFetch","FilterOption","groupName","currentValue","background","style","color","htmlFor","FilterOptions","onChangeFilterClick","onChangeSortClick","key","userTodoInfo","sortTodos","sortValue","filterTodos","get","firstRender","useRef","current","handleChangeSortClick","handleChangeFilterClick","LoadingSpinner","Spinner","search","startFetchTodos","setSearch","startSearchTodo","length","startSortTodos","clearTodos","profileImg","initRender","SearchBar","onSearchChange","HamburgerBars","toggled","NavContentSection","url","currentRoute","startLogoutUser","withCredentials","onNavSectionClick","location","useLocation","pathname","NavbarSmall","setToggled","handleClick","NavbarDesktop","NavbarContainer","UserProfile","img","NotificationCard","description","todoUrl","NotificationCardContainer","seen","NotificationDropdownList","ref","notifications","setToggleNotifications","wrapperRef","handleClickOutside","contains","document","addEventListener","removeEventListener","createdBy","IconHover","postOneNotification","updateOneNotification","updates","patch","notificationsInfo","startFetchNotifications","console","log","socket","unseenNotifications","setUnseenNotifications","countUnseenNotifications","on","markAllNotificationsAsSeen","forEach","position","PublicChatMessage","message","scrollToBottom","scrollRef","bottom","scrollHeight","scrollTop","PublicChatList","messages","listRef","trimMessage","slice","dashboardMessagesInfo","messagesError","messagesLoading","dashboardStartFetchMessages","params","limit","skip","reverse","Container","children","Portal","props","el","createElement","getElementById","appendChild","this","removeChild","ReactDOM","createPortal","React","Component","Modal","iconBackground","DropdownSelect","values","label","defaultValue","selected","marginBottom","fontSize","padding","fetchAllUsers","postOneTodo","todoInfo","fetchOneTodoWithTimeline","updateOneTodo","deleteOneTodo","delete","Input","handleChange","InputLabel","Textarea","postOneTimeline","team","userId","match","setTitle","setDescription","users","setUsers","selectedUser","setSelectedUser","setDifficulty","setUrgency","setCategory","toggleSuccessModal","setToggleSuccessModal","errorMessage","setErrorMessage","toggleErrorModal","setToggleErrorModal","then","res","handleUserFetchSuccess","catch","userValues","createTodo","emit","handleSaveSuccess","handleSaveError","setTimeout","numberValues","ChatBubble","currentUserMessage","ChatProfileImg","sizeInPixels","imageSize","height","TeamMessage","display","justifyContent","marginLeft","listScrollPosition","teamMessagesInfo","allMessagesSeen","numberOfResponses","changeScrollPosition","payload","onTopClick","firstMount","offsetTop","lastMessage","messageId","postOneMessage","IconColor","WriteMessageToolbar","messageValue","onSendClick","currentScroll","messageError","startFetchMessages","incrementSkip","removeChatMessages","addMessage","addDashboardMessage","addMessageAndRemoveOldest","startAddMessage","setMessage","newMessage","saveMessage","handleOnMessageChange","TodoCardSkeleton","startFilterTodos","teamTodoInfo","sortUrgencyDsc","sortDifficultyDsc","FullscreenModal","onOutsideClick","onCloseModalClick","stopPropagation","e","EditTodo","onSaveClick","selectedCategory","setSelectedCategory","toString","TodoInfo","TodoTimeline","TimelineList","timelines","ModalConfirm","onYesClick","onNoClick","setTodo","timeline","setTimeline","setLoading","setError","toggleEditPopup","setToggleEditPopup","toggleDeletePopup","setToggleDeletePopup","toggleCompletePopup","setToggleCompletePopup","toggleMarkAsActiveModal","setToggleMarkAsActivePopup","getTodo","getAllUsers","formattedUsers","handleOnMarkAsActive","todoId","handleOnCloseClick","handleOnConfirmDeleteClick","handleOnConfirmCompleteClick","completed","handleError","handleOnConfirmActiveClick","updateTodo","changes","newTodo","userPlaceholder","filteredChanges","Object","assign","handleSaveClick","startAuthUser","URL","process","PORT","io","path","exact","render","component","UserDashboardContainer","TodoInfoContainer","TeamDashboardContainer","App","LoginContainer","Boolean","window","hostname","DEFAULT_STATE","notificationsError","notificationsLoading","combineReducers","action","indexOf","b","Date","middlewares","thunk","store","createStore","rootReducer","applyMiddleware","StrictMode","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f2acb1e1.chunk.js","sourcesContent":["import React, { ReactElement } from 'react'\r\n\r\ninterface Props {\r\nicon: React.ReactElement\r\n}\r\n\r\nexport default function Icon({icon}: Props): ReactElement {\r\n  return (\r\n    <>\r\n    {icon}\r\n    </>\r\n  )\r\n}\r\n","import Icon from '../icon/Icon'\r\nimport './input-icon.scss'\r\nimport React, { ReactElement } from 'react'\r\n\r\ninterface Props {\r\n onChange: (event: string) => void;  \r\n icon: React.ReactElement,\r\n value: string,\r\n type?: string,\r\n placeholder?: string\r\n}\r\n\r\nexport default function InputIcon({placeholder, onChange, icon, value, type = \"text\"}: Props): ReactElement {\r\n  return (\r\n    <div className=\"input-icon\">\r\n      <Icon icon={icon} />\r\n      <input placeholder={placeholder} value={value} onChange={event => onChange(event.target.value)} type={type} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport './button.style.scss'\r\ninterface Props {\r\n  text: string, \r\n  onClick: (event?: any) => void; \r\n  className?: string, \r\n  loading?: boolean,\r\n}\r\n\r\n\r\nexport default function Button({onClick, text, className = \"btn-primary\", loading}: Props): ReactElement {\r\n \r\n  \r\n \r\n  return (\r\n    <button className={className}  disabled={loading} onClick={(event) =>onClick(event)}>{text}</button>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport InputIcon from '../Shared/InputIcon/InputIcon';\r\nimport Button from '../Shared/Button/Button'\r\nimport './login-modal.scss';\r\n\r\ninterface Props {\r\n  onChangeEmail: (value: string) => void;\r\n  emailIcon: React.ReactElement;\r\n  onChangePassword: (value: string) => void;\r\n  passwordIcon: React.ReactElement;\r\n  emailValue: string;\r\n  passwordValue: string;\r\n  onClick: () => void;\r\n  loading: boolean,\r\n  error: boolean\r\n}\r\n\r\nexport default function LoginModal({\r\n  onChangeEmail,\r\n  emailIcon,\r\n  passwordIcon,\r\n  onChangePassword,\r\n  emailValue,\r\n  passwordValue,\r\n  onClick,\r\n  loading,\r\n  error\r\n}: Props): ReactElement {\r\n  return (\r\n    <div className=\"login-modal\">\r\n      <InputIcon\r\n        placeholder=\"Email\"\r\n        value={emailValue}\r\n        icon={emailIcon}\r\n        onChange={(value) => onChangeEmail(value)}\r\n      />\r\n      <InputIcon\r\n        placeholder=\"Password\"\r\n        type=\"password\"\r\n        value={passwordValue}\r\n        icon={passwordIcon}\r\n        onChange={(value) => onChangePassword(value)}\r\n      />\r\n      <Button loading={loading} text=\"Log in\" onClick={onClick} />\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios'\nimport { User, AppActions, LoginInfo } from './user.types'\n\nexport const loginUser = (user: LoginInfo): AppActions => ({\n    type: 'LOGIN_USER',\n    payload: user\n})\n\nexport const loginRequestLoading = () => ({\n    type: \"LOGIN_REQUEST_LOADING\"\n})\n\nexport const loginRequestFailed = () => ({\n    type: \"LOGIN_REQUEST_FAILED\",\n\n})\n\nexport const loginRequestSucess = (user: User) => ({\n    type: \"LOGIN_REQUEST_SUCCESS\",\n    user\n})\n\nexport const authByToken = () => ({\n    type: \"AUTH_BY_TOKEN\"\n})\n\nexport const authRequestFailed = () => ({\n    type: \"AUTH_REQUEST_FAILED\"\n})\n\nexport const authRequestSuccess = (user: User) => ({\n    type: \"AUTH_REQUEST_SUCCESS\",\n    user\n})\n\nexport const logoutRequest = () => ({\n    type: \"LOGOUT_USER\"\n})\n\nexport const startLoginUser = (user: any) => {\n    return async (dispatch: any, getState: any) => {\n\n\n        dispatch(loginRequestLoading())\n        const {email, password} = user\n        \n        try {\n           const response = await axios.post('/api/login', {\n                email,\n                password\n            })\n            dispatch(loginRequestSucess(response.data))\n        } catch (error) {\n            dispatch(loginRequestFailed())\n        }\n    }\n}\n\nexport const startAuthUser = () => {\n    return async (dispatch: any, getState: any) => {\n        try {\n            const response = await axios.get('/api/authByToken')\n            dispatch(authRequestSuccess(response.data))\n        } catch (error) {\n            dispatch(authRequestFailed())\n        }\n        \n    }\n}\n\nexport const startLogoutUser = () => {\n    return async (dispatch: any, getState: any) => {\n        try {\n            const response = await axios.post('/api/logout' , {}, { withCredentials: true })\n            \n            dispatch(logoutRequest())\n        } catch (error) {\n\n        }\n    }\n}","import React, { ReactElement, useState, useEffect } from 'react';\r\nimport LoginModal from './LoginModal';\r\nimport { AiOutlineUser, AiOutlineLock } from 'react-icons/ai';\r\nimport { connect, MapStateToProps } from 'react-redux';\r\nimport { LoginInfo } from '../../redux/user/user.types';\r\nimport {startLoginUser} from '../../redux/user/user.actions'\r\nimport { useHistory } from 'react-router-dom';\r\nimport hero from '../../media/hero.jpg'\r\nimport { useWindowWidth } from '@react-hook/window-size';\r\nimport './login-page.scss'\r\ninterface Props {\r\n  startLoginUser: any,\r\n  loading: boolean,\r\n  error: boolean, \r\n  authenticated: boolean\r\n}\r\n\r\ninterface Users {\r\n  user?: {\r\n    email?: string,\r\n    password?: string\r\n  }\r\n}\r\n\r\nfunction LoginContainer({startLoginUser, loading, authenticated, error}: Props): ReactElement {\r\n  const width = useWindowWidth();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory()\r\n  const handleEmailChange = (value: string) => {\r\n    setEmail(value);\r\n  };\r\n\r\n  const handlePasswordChange = (value: string) => {\r\n    setPassword(value);\r\n  };\r\n\r\n  const login = () => {\r\n    const user = {\r\n      email,\r\n      password\r\n    }\r\n    startLoginUser(user)\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if(authenticated) {\r\n    handleLoginSuccess()\r\n    }\r\n  }, [authenticated])\r\n\r\n\r\n  const handleLoginSuccess = () => {\r\n    history.push('/dashboard/user')\r\n  }\r\n\r\n  const handleLoginError = () => {\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      {width > 1024 && \r\n      <img className=\"login-hero\" src={hero} alt=\"\"/>\r\n      }\r\n      <div className=\"login-page-right\">\r\n        {width > 1024 && \r\n        <div className=\"login-page-title\">\r\n          The easy way to collaborate\r\n        </div>\r\n        }\r\n      <div>\r\n      <LoginModal\r\n        onChangeEmail={(value) => handleEmailChange(value)}\r\n        emailIcon={<AiOutlineUser />}\r\n        onChangePassword={(value) => handlePasswordChange(value)}\r\n        passwordIcon={<AiOutlineLock />}\r\n        emailValue={email}\r\n        passwordValue={password}\r\n        onClick={login}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n      </div>\r\n            {error && \r\n      <div className=\"login-modal-error\">Could not sign in</div>\r\n      }\r\n      \r\n      <div className=\"login-email\" id=\"login-first-user\">\r\n      kathieandrewson@team.com\r\n\r\n      </div>\r\n      <div className=\"login-email\">stephaniestacy@team.com</div>\r\n      <div className=\"login-email\">\r\n      johnkendal@team.com\r\n      </div>\r\n      <div className=\"login-email\">devindustin@team.com</div>\r\n      <div className=\"login-email\">kodynicholson@team.com</div>\r\n      <div className=\"login-password\">password: test123</div>\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n startLoginUser: (user: LoginInfo) => dispatch(startLoginUser(user))\r\n})\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  loading: state.userInfo.loading,\r\n  error: state.userInfo.error,\r\n  authenticated: state.userInfo.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer)","import axios from 'axios';\r\nimport { Todo } from './user-todo.types';\r\n\r\nexport const fetchTodosLoading = () => ({\r\n  type: 'TODOS_REQUEST_LOADING',\r\n});\r\n\r\nexport const fetchTodosFailed = () => ({\r\n  type: 'TODOS_REQUEST_FAILED',\r\n});\r\n\r\nexport const fetchTodosSuccess = (todos: Todo) => ({\r\n  type: 'TODOS_REQUEST_SUCCESS',\r\n  todos,\r\n});\r\n\r\nexport const filterTodos = (todos: Todo) => ({\r\n  type: 'FILTER_TODOS',\r\n  todos,\r\n});\r\n\r\nexport const searchTodos = (todos: Todo) => ({\r\n  type: 'SEARCH_TODOS',\r\n  todos,\r\n});\r\n\r\nexport const sortTodosAsc = () => ({\r\n  type: 'SORT_TODOS_ASC',\r\n});\r\n\r\nexport const sortTodosCreatedAtNewest = () => ({\r\n  type: 'SORT_TODOS_CREATED_AT_NEWEST',\r\n});\r\n\r\nexport const sortTodosCreatedAtOldest = () => ({\r\n  type: 'SORT_TODOS_CREATED_AT_OLDEST',\r\n});\r\n\r\nexport const setFilter = (filter: string) => ({\r\n  type: 'SET_FILTER',\r\n  filter,\r\n});\r\n\r\nexport const setSort = (sort: string) => ({\r\n  type: 'SET_SORT',\r\n  sort,\r\n});\r\n\r\nexport const sortByUrgencyDsc = () => ({\r\n  type: 'SORT_TODOS_URGENCY_DSC',\r\n});\r\n\r\nexport const sortByDifficultyDsc = () => ({\r\n  type: 'SORT_TODOS_DIFFICULTY_DSC',\r\n});\r\n\r\nexport const setSearch = (search: string) => ({\r\n  type: 'SET_SEARCH',\r\n  search,\r\n});\r\n\r\nexport const clearState = () => ({\r\n  type: 'CLEAR_STATE',\r\n});\r\n\r\nexport const startSortTodos = () => {\r\n  return (dispatch: any, getState: any) => {\r\n    const sortValue = getState().userTodoInfo.sort;\r\n    if (sortValue === 'oldest') {\r\n      return dispatch(sortTodosCreatedAtOldest());\r\n    }\r\n    if (sortValue === 'newest') {\r\n      return dispatch(sortTodosCreatedAtNewest());\r\n    }\r\n    if (sortValue === 'urgency') {\r\n      return dispatch(sortByUrgencyDsc());\r\n    }\r\n    if (sortValue === 'difficulty') {\r\n      return dispatch(sortByDifficultyDsc());\r\n    }\r\n  };\r\n};\r\n\r\nexport const startSearchTodo = () => {\r\n  return async (dispatch: any, getState: any) => {\r\n    dispatch(fetchTodosLoading());\r\n    try {\r\n      const response = await axios.get('/api/todos/user');\r\n      return getState().userTodoInfo.search.length === 0\r\n        ? dispatch(fetchTodosSuccess(response.data))\r\n        : dispatch(searchTodos(response.data));\r\n    } catch (error) {\r\n      dispatch(fetchTodosFailed());\r\n    }\r\n  };\r\n};\r\n\r\nexport const startFilterTodos = () => {\r\n  return async (dispatch: any, getState: any) => {\r\n    dispatch(fetchTodosLoading());\r\n    try {\r\n      const response = await axios.get('/api/todos/user');\r\n      return getState().userTodoInfo.filter === 'All'\r\n        ? dispatch(fetchTodosSuccess(response.data))\r\n        : dispatch(filterTodos(response.data));\r\n    } catch (error) {\r\n      dispatch(fetchTodosFailed());\r\n    }\r\n  };\r\n};\r\n\r\nexport const startFetchTodos = () => {\r\n  return async (dispatch: any, getState: any) => {\r\n    dispatch(fetchTodosLoading());\r\n\r\n    try {\r\n      const response = await axios.get('/api/todos/user');\r\n      dispatch(fetchTodosSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(fetchTodosFailed());\r\n    }\r\n  };\r\n};\r\n","import React, { ReactElement } from 'react';\r\nimport { format, render, cancel, register } from 'timeago.js';\r\n\r\nimport {\r\n  AiOutlineUser,\r\n  AiOutlineSync,\r\n  AiOutlineCalendar,\r\n  AiOutlineConsoleSql,\r\n} from 'react-icons/ai';\r\nimport './todo-card.scss';\r\nimport { Link } from 'react-router-dom';\r\ninterface Props {\r\n  title: string;\r\n  urgency: string;\r\n  difficulty: string;\r\n  user: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  id: string;\r\n  category: string;\r\n  triggerPopup: boolean;\r\n  onMouseEnter: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n  onMouseLeave: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n}\r\n\r\nexport default function TodoCard({\r\n  title,\r\n  urgency,\r\n  difficulty,\r\n  user,\r\n  createdAt,\r\n  updatedAt,\r\n  category,\r\n  id,\r\n  onMouseEnter,\r\n  onMouseLeave,\r\n  triggerPopup,\r\n}: Props): ReactElement {\r\n  return (\r\n    <div onMouseEnter={(event) => onMouseEnter(event)} onMouseLeave={(event) => onMouseLeave(event)} className=\"todo-card\">\r\n      <Link to={`/todo/${id}`}>\r\n        <div className=\"todo-card-left\">\r\n          <div className=\"todo-card-title\">{title}</div>\r\n          {/*       <div className=\"todo-card-ranges\">\r\n          <div className=\"todo-card-range\">\r\n            <div className=\"todo-card-range-title\">Urgency</div>\r\n            <div className=\"todo-card-range-number\">{urgency}</div>\r\n          </div>\r\n          <div className=\"todo-card-range\">\r\n            <div className=\"todo-card-range-title\">Difficulty</div>\r\n            <div className=\"todo-card-range-number\">{difficulty}</div>\r\n          </div>\r\n        </div> */}\r\n        </div>\r\n        {triggerPopup && (\r\n          <div className=\"todo-card-stats\">\r\n            <div className=\"todo-card-stat\">\r\n              <AiOutlineUser className=\"todo-card-icon\" />\r\n              {user}\r\n            </div>\r\n            <div className=\"todo-card-stat\">\r\n              <AiOutlineCalendar className=\"todo-card-icon\" />\r\n              {format(createdAt)}\r\n            </div>\r\n            <div className=\"todo-card-stat\">\r\n              <AiOutlineSync className=\"todo-card-icon\" />\r\n              {format(updatedAt)}\r\n            </div>\r\n            <div className=\"todo-card-stat\">\r\n              <AiOutlineConsoleSql className=\"todo-card-icon\" />\r\n              {category}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React, { ReactElement, useState } from 'react'\r\nimport TodoCard from './TodoCard'\r\n\r\ninterface Props {\r\n  title: string,\r\n  urgency: string;\r\n  difficulty: string;\r\n  user: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  id: string;\r\n  category: string;\r\n}\r\n\r\nexport default function TodoCardContainer({category, title, createdAt, updatedAt, urgency, difficulty, id, user}: Props): ReactElement {\r\n\r\n  const [togglePopup, setTogglePopup] = useState(false)\r\n\r\n  const handleOnMouseEnter = () => {\r\n    setTogglePopup(true)\r\n  }\r\n\r\n  const handleOnMouseLeave = () => {\r\n    setTogglePopup(false)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"todo-card\">\r\n      <TodoCard category={category} triggerPopup={togglePopup} onMouseLeave={handleOnMouseLeave} onMouseEnter={handleOnMouseEnter} title={title} createdAt={createdAt} updatedAt={updatedAt} user={user} urgency={urgency} difficulty={difficulty} id={id} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport TodoCard from './TodoCard';\r\nimport { Todo, TodoAndUser } from '../../types/todo';\r\nimport TodoCardSkeleton from './TodoCard.skeleton';\r\nimport { connect } from 'react-redux';\r\nimport TodoCardContainer from './TodoCard.container';\r\n\r\ninterface Props {\r\n  todos: TodoAndUser[];\r\n  id: string;\r\n}\r\n\r\nfunction TodosList({ todos, id }: Props): ReactElement {\r\n  let userName: string;\r\n\r\n  return (\r\n    <div className=\"todos-list\">\r\n      {todos.map((todo) => {\r\n        if (todo.user === null) {\r\n          userName = 'None';\r\n        } else if (todo.user._id === id) {\r\n          userName = 'You';\r\n        } else {\r\n          userName = todo.user.name;\r\n        }\r\n\r\n        return (\r\n          <TodoCardContainer\r\n            id={todo._id}\r\n            title={todo.title}\r\n            urgency={todo.urgency}\r\n            difficulty={todo.difficulty}\r\n            user={userName}\r\n            createdAt={todo.createdAt}\r\n            updatedAt={todo.updatedAt}\r\n            category={todo.category}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  id: state.userInfo.user.id,\r\n});\r\n\r\nexport default connect(mapStateToProps)(TodosList);\r\n","import React, { ReactElement } from 'react'\r\nimport Button from '../Button/Button'\r\nimport './failed-fetch.scss'\r\ninterface Props {\r\n  text: string, \r\n  onClick: () => void;\r\n}\r\n\r\nexport default function FailedFetch({text, onClick}: Props): ReactElement {\r\n  return (\r\n    <div className=\"failed-fetch\">\r\n      <div className=\"failed-fetch-title\">{text}</div>\r\n      <Button onClick={onClick} className=\"btn-primary\" text=\"Try again\"/>\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport Input from '../Shared/input/Input'\r\nimport InputIcon from '../Shared/InputIcon/InputIcon'\r\nimport {AiOutlineSearch} from 'react-icons/ai'\r\nimport { Event } from '../../types/event'\r\ninterface Props {\r\n  value: string,\r\n  onChange: (event: string) => void,\r\n  placeholder?: string, \r\n}\r\n\r\nexport default function ({onChange, value, placeholder}: Props): ReactElement {\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <InputIcon placeholder={placeholder} value={value} icon={<AiOutlineSearch />} onChange={value =>  onChange(value)} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport './filter-option.scss';\r\ninterface Props {\r\n  value: string;\r\n  name: string;\r\n  onClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  groupName: string;\r\n  currentValue?: string;\r\n  background: string,\r\n}\r\n\r\nexport default function FilterOption({\r\n  value,\r\n  name,\r\n  onClick,\r\n  groupName,\r\n  currentValue,\r\n  background\r\n}: Props): ReactElement {\r\n  return (\r\n    <div\r\n      style={\r\n        currentValue === value\r\n          ? { background, color: 'white' }\r\n          : { background: 'white' }\r\n      }\r\n      className=\"filter-option\"\r\n    >\r\n      <label htmlFor=\"\">{name}</label>\r\n      <input\r\n        name={groupName}\r\n        onChange={(event) => onClick(event)}\r\n        value={value}\r\n        type=\"radio\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { ReactElement, useState, useEffect, useRef, ChangeEvent } from 'react';\r\nimport FilterOption from './FilterOption';\r\n\r\n\r\n\r\ninterface Props {\r\n  sort: string,\r\n  filter: string;\r\n  onChangeSortClick: (value: string) => void;\r\n  onChangeFilterClick: (value: string) => void;\r\n}\r\n\r\nexport default function FilterOptions({\r\n  sort,\r\n  filter,\r\n  onChangeFilterClick,\r\n  onChangeSortClick\r\n}: Props): ReactElement {\r\n\r\n\r\n  return (\r\n    <div className=\"filter-options\">\r\n      <div className=\"filter-options-section\">\r\n        <FilterOption\r\n          background=\"#2F344C\"\r\n          currentValue={filter}\r\n          groupName=\"filter_options\"\r\n          name=\"All\"\r\n          value=\"All\"\r\n          onClick={(event) => onChangeFilterClick(event.target.value)}\r\n          key=\"all\"\r\n        />\r\n        <FilterOption\r\n          background=\"#2F344C\"\r\n          currentValue={filter}\r\n          groupName=\"filter_options\"\r\n          name=\"Front End\"\r\n          value=\"Front End\"\r\n          onClick={(event) => onChangeFilterClick(event.target.value)}\r\n          key=\"frontend\"\r\n        />\r\n        <FilterOption\r\n          background=\"#2F344C\"\r\n          currentValue={filter}\r\n          groupName=\"filter_options\"\r\n          name=\"Back End\"\r\n          value=\"Back End\"\r\n          onClick={(event) => onChangeFilterClick(event.target.value)}\r\n          key=\"backend\"\r\n        />\r\n        <FilterOption\r\n          background=\"#2F344C\"\r\n          currentValue={filter}\r\n          groupName=\"filter_options\"\r\n          name=\"UI\"\r\n          value=\"UI\"\r\n          onClick={(event) => onChangeFilterClick(event.target.value)}\r\n          key=\"ui\"\r\n        />\r\n        <FilterOption\r\n          background=\"#2F344C\"\r\n          currentValue={filter}\r\n          groupName=\"filter_options\"\r\n          name=\"UX\"\r\n          value=\"UX\"\r\n          onClick={(event) => onChangeFilterClick(event.target.value)}\r\n          key=\"ux\"\r\n        />\r\n      </div>\r\n      <div className=\"filter-options-section\">\r\n        <FilterOption\r\n          background=\"#648CF6\"\r\n          currentValue={sort}\r\n          groupName=\"sort_options\"\r\n          name=\"Urgency\"\r\n          value=\"urgency\"\r\n          onClick={(event) => onChangeSortClick(event.target.value)}\r\n        />\r\n        <FilterOption\r\n          background=\"#648CF6\"\r\n          currentValue={sort}\r\n          groupName=\"sort_options\"\r\n          name=\"Difficulty\"\r\n          value=\"difficulty\"\r\n          onClick={(event) => onChangeSortClick(event.target.value)}\r\n        />\r\n        <FilterOption\r\n          background=\"#648CF6\"\r\n          currentValue={sort}\r\n          groupName=\"sort_options\"\r\n          name=\"Newest\"\r\n          value=\"newest\"\r\n          onClick={(event) => onChangeSortClick(event.target.value)}\r\n        />\r\n        <FilterOption\r\n          background=\"#648CF6\"\r\n          currentValue={sort}\r\n          groupName=\"sort_options\"\r\n          name=\"Oldest\"\r\n          value=\"oldest\"\r\n          onClick={(event) => onChangeSortClick(event.target.value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { ReactElement, useEffect, useRef } from 'react';\r\nimport FilterOptions from './FilterOptions';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  startSortTodos,\r\n  startFilterTodos,\r\n  setSort,\r\n  setFilter,\r\n} from '../../redux/user-todos/user-todo.actions';\r\n\r\ninterface Props {\r\n  sortTodos: () => void;\r\n  filterTodos: () => void;\r\n  filter: string;\r\n  sort: string;\r\n  setSort: (sort: string) => void;\r\n  setFilter: (filter: string) => void;\r\n}\r\n\r\nfunction UserFilterOptionsContainer({\r\n  sortTodos,\r\n  filterTodos,\r\n  filter,\r\n  sort,\r\n  setSort,\r\n  setFilter,\r\n}: Props): ReactElement {\r\n  const firstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (!firstRender.current) sortTodos();\r\n  }, [sort]);\r\n\r\n  useEffect(() => {\r\n    if (!firstRender.current) {\r\n      filterTodos();\r\n    }\r\n  }, [filter]);\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) firstRender.current = false;\r\n  }, []);\r\n\r\n  const handleChangeFilterClick = (value: string) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  const handleChangeSortClick = (value: string) => {\r\n    setSort(value);\r\n  };\r\n\r\n  return (\r\n    <FilterOptions\r\n      filter={filter}\r\n      sort={sort}\r\n      onChangeSortClick={(value) => handleChangeSortClick(value)}\r\n      onChangeFilterClick={(value) => handleChangeFilterClick(value)}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  filter: state.userTodoInfo.filter,\r\n  sort: state.userTodoInfo.sort,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  setFilter: (filter: string) => dispatch(setFilter(filter)),\r\n  setSort: (sort: string) => dispatch(setSort(sort)),\r\n  sortTodos: () => dispatch(startSortTodos()),\r\n  filterTodos: () => dispatch(startFilterTodos()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserFilterOptionsContainer);\r\n","import React, { ReactElement } from 'react'\r\nimport Spinner from '../../../media/loading-spinner.svg'\r\nimport './loading-spinner.scss'\r\ninterface Props {\r\n  \r\n}\r\n\r\nexport default function LoadingSpinner({}: Props): ReactElement {\r\n  return (\r\n    <div className=\"loading-spinner-wrap\">\r\n      <img className=\"loading-spinner\" src={Spinner} alt=\"\"/>\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement, useEffect, useRef, Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  startFetchTodos,\r\n  setSort,\r\n  setSearch,\r\n  startSearchTodo,\r\n  startSortTodos,\r\n  setFilter,\r\n  clearState,\r\n} from '../../redux/user-todos/user-todo.actions';\r\nimport { Todo, TodoAndUser } from '../../types/todo';\r\nimport Container from '../Shared/Container/Container';\r\nimport TodosList from './TodosList';\r\nimport TodoCardSkeleton from './TodoCard.skeleton';\r\nimport FailedFetch from '../Shared/FailedFetch/FailedFetch';\r\nimport FilterOption from './FilterOption';\r\nimport FilterOptions from './FilterOptions';\r\nimport SearchBar from './SearchBar';\r\nimport { Event } from '../../types/event';\r\nimport './dashboard.scss';\r\nimport UserFilterOptionsContainer from './UserFilterOptions.container';\r\nimport LoadingSpinner from '../Shared/LoadingSpinner/LoadingSpinner';\r\n\r\ninterface Props {\r\n  startFetchTodos: () => void;\r\n  id: string;\r\n  todos: TodoAndUser[];\r\n  error: boolean;\r\n  loading: boolean;\r\n  filter: string,\r\n  sort: string;\r\n  search: string;\r\n  name: string;\r\n  profileImg: string;\r\n  setSort: (value: string) => void;\r\n  setSearch: (search: string) => void;\r\n  startSearchTodo: () => void;\r\n  sortTodos: () => void;\r\n  startSortTodos: () => void;\r\n  clearTodos: () => void;  \r\n}\r\n\r\nfunction UserDashboardContainer({\r\n  startFetchTodos,\r\n  id,\r\n  todos,\r\n  error,\r\n  name,\r\n  profileImg,\r\n  loading,\r\n  sort,\r\n  search,\r\n  filter,\r\n  setSort,\r\n  setSearch,\r\n  startSearchTodo,\r\n  sortTodos,\r\n  startSortTodos,\r\n  clearTodos\r\n}: Props): ReactElement {\r\n\r\n  const initRender = useRef(true);\r\n\r\n\r\n  useEffect(() => {\r\n      startSearchTodo();\r\n      return () => {\r\n        clearTodos()\r\n      }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n   if(!initRender.current) { startSearchTodo() }\r\n  }, [search])\r\n  \r\n  useEffect(() => {\r\n    if(initRender.current) {\r\n      initRender.current = false \r\n    }\r\n  }, [])\r\n  \r\n  \r\n  const handleRetryClick = () => {\r\n    startFetchTodos();\r\n  };\r\n\r\n  const onSearchChange = (value: string) => {\r\n    setSearch(value);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n        <div className=\"dashboard-page\">\r\n          <SearchBar\r\n            onChange={(value) => onSearchChange(value)}\r\n            value={search}\r\n            placeholder=\"Search User Todos\"\r\n          />\r\n          <UserFilterOptionsContainer />\r\n          {error && (\r\n            <FailedFetch\r\n              text=\"Could not get todos\"\r\n              onClick={handleRetryClick}\r\n            />\r\n          )}\r\n          {(todos.length === 0 && !error && !loading) && (\r\n            <div>\r\n              You currently have no active {filter} todos. \r\n            </div>\r\n          )}\r\n          {loading ? <LoadingSpinner /> : <TodosList todos={todos} />}\r\n        </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  startFetchTodos: () => dispatch(startFetchTodos()),\r\n  setSort: (sort: string) => dispatch(setSort(sort)),\r\n  setFilter: (filter: string) => dispatch(setFilter(filter)),\r\n  setSearch: (search: string) => dispatch(setSearch(search)),\r\n  startSearchTodo: () => dispatch(startSearchTodo()),\r\n  startSortTodos: () => dispatch(startSortTodos()),\r\n  clearTodos: () => dispatch(clearState())\r\n});\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  loading: state.userTodoInfo.loading,\r\n  error: state.userTodoInfo.error,\r\n  todos: state.userTodoInfo.todos,\r\n  sort: state.userTodoInfo.sort,\r\n  search: state.userTodoInfo.search,\r\n  filter: state.userTodoInfo.filter,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserDashboardContainer);\r\n","import React, { ReactElement } from 'react'\r\n\r\ninterface Props {\r\n  onClick: () => void\r\n  toggled: boolean\r\n}\r\n\r\nexport default function HamburgerBars({onClick, toggled}: Props): ReactElement {\r\n  return (\r\n    <div onClick={onClick} className=\"nav-trigger-area\">\r\n    <div className={toggled ? \"hamburger-bar-toggled hamburger-bar\" : \"hamburger-bar\" }></div>\r\n    <div className={toggled ? \"hamburger-bar-toggled hamburger-bar\" : \"hamburger-bar\" }></div>\r\n    <div className={toggled ? \"hamburger-bar-toggled hamburger-bar\" : \"hamburger-bar\" }></div>\r\n  </div>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useReactPath } from '../../hooks/useReactPath';\r\ninterface Props {\r\n  url: string;\r\n  title?: string;\r\n  icon: ReactElement;\r\n  onClick: () => void;\r\n  currentRoute: boolean,\r\n}\r\n\r\nexport default function NavContentSection({\r\n  url,\r\n  title,\r\n  icon,\r\n  onClick,\r\n  currentRoute\r\n}: Props): ReactElement {\r\n\r\n\r\n  \r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={\r\n          currentRoute\r\n          ? { background: '#363B59' }\r\n          : { background: 'None' }\r\n      }\r\n      className=\"nav-content-section\"\r\n    >\r\n      <Link className=\"nav-content-section-link\" to={url}>\r\n        {icon}\r\n        <div className=\"nav-content-section-title\">{title}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\nimport {\r\n  AiOutlineUser,\r\n  AiOutlineTeam,\r\n  AiOutlinePlusSquare,\r\n  AiOutlineComment,\r\n} from 'react-icons/ai';\r\nimport { FaSignOutAlt } from 'react-icons/fa';\r\nimport { useHistory, Link, withRouter, useLocation } from 'react-router-dom';\r\nimport NavContentSection from './NavContentSection';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  startLogoutUser,\r\n  authByToken,\r\n  startAuthUser,\r\n} from '../../redux/user/user.actions';\r\ninterface Props {\r\n  onNavSectionClick: () => void;\r\n  startLogoutUser: () => void;\r\n\r\n}\r\n\r\nfunction NavContent({\r\n  onNavSectionClick,\r\n  startLogoutUser,\r\n\r\n}: Props): ReactElement {\r\n  const location = useLocation()\r\n\r\n\r\n  const handleLogoutClick = () => {\r\n    startLogoutUser();\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"nav-content\">\r\n      <div className=\"nav-content-upper\">\r\n        <NavContentSection\r\n          onClick={onNavSectionClick}\r\n          url=\"/dashboard/user\"\r\n          title=\"Your Todos\"\r\n          icon={<AiOutlineUser className=\"nav-content-section-icon\" />}\r\n          currentRoute={location.pathname === '/dashboard/user'}\r\n        />\r\n        <NavContentSection\r\n          onClick={onNavSectionClick}\r\n          url=\"/dashboard/team\"\r\n          title=\"Team Todos\"\r\n          icon={<AiOutlineTeam className=\"nav-content-section-icon\" />}\r\n          currentRoute={location.pathname === '/dashboard/team'}\r\n        />\r\n        <NavContentSection\r\n          onClick={onNavSectionClick}\r\n          url=\"/todo/create\"\r\n          title=\"Create Todo\"\r\n          icon={<AiOutlinePlusSquare className=\"nav-content-section-icon\" />}\r\n          currentRoute={location.pathname === '/todo/create'}\r\n        />\r\n        <NavContentSection\r\n          onClick={onNavSectionClick}\r\n          url=\"/messages/team\"\r\n          title=\"Team Chat\"\r\n          icon={<AiOutlineComment className=\"nav-content-section-icon\" />}\r\n          currentRoute={location.pathname === '/messages/team'}\r\n        />\r\n      </div>\r\n      <div className=\"nav-content-lower\">\r\n        <NavContentSection\r\n          url=\"/login\"\r\n          icon={<FaSignOutAlt className=\"nav-content-section-icon\" />}\r\n          title=\"Log out\"\r\n          onClick={handleLogoutClick}\r\n          currentRoute={location.pathname === '/login'}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  startLogoutUser: () => dispatch(startLogoutUser()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(NavContent);\r\n","import React, { ReactElement, useState} from 'react'\r\nimport HamburgerBars from './HamburgerBars'\r\nimport './navbar.scss'\r\nimport NavContent from './NavContent'\r\ninterface Props {\r\n  \r\n}\r\n\r\nexport default function NavbarSmall({}: Props): ReactElement {\r\n\r\n\r\n  const [toggled, setToggled] = useState(false)\r\n  \r\n  const handleClick = () => {\r\n    setToggled(!toggled)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"nav-small-device\">\r\n      <div className=\"nav-small-device-top-bar\">\r\n      <HamburgerBars toggled={toggled} onClick={handleClick} />\r\n      </div>\r\n      {toggled && \r\n        <NavContent onNavSectionClick={handleClick} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport NavContent from './NavContent'\r\n\r\ninterface Props {\r\n  \r\n}\r\n\r\nexport default function NavbarDesktop({}: Props): ReactElement {\r\n  \r\n  const handleNavSectionClick = () => {\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className=\"navbar\">\r\n      <NavContent onNavSectionClick={handleNavSectionClick} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport {\r\n  useWindowWidth,\r\n\r\n} from '@react-hook/window-size'\r\nimport './navbar.scss'\r\nimport NavbarSmall from './NavbarSmall'\r\nimport NavbarDesktop from './NavbarDesktop'\r\n \r\ninterface Props {\r\n  \r\n}\r\n\r\nexport default function NavbarContainer({}: Props): ReactElement {\r\n\r\n  const width = useWindowWidth()\r\n\r\n\r\n return width < 1024 ?\r\n  <NavbarSmall />\r\n  : \r\n  <NavbarDesktop />\r\n \r\n}\r\n","import React, { ReactElement, useEffect } from 'react';\r\nimport { MdNotificationsNone } from 'react-icons/md';\r\nimport './user-profile.scss';\r\nimport NotificationDropdownList from '../NotificationsDropdown/NotificationDropdownList';\r\nimport { Notification } from '../../../types/notification';\r\nimport IconHover from '../IconHover/IconHover';\r\ninterface Props {\r\n  name: string;\r\n  img: string;\r\n}\r\n\r\nexport default function UserProfile({\r\n  name,\r\n  img,\r\n}: Props): ReactElement {\r\n  return (\r\n    <div className=\"user-profile\">\r\n      <img src={img} alt=\"\" />\r\n      <div className=\"user-profile-name\">{name}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {format} from 'timeago.js'\r\ninterface Props {\r\n  description: string;\r\n  name: string;\r\n  profileImg: string;\r\n  todoUrl: string;\r\n  createdAt: Date, \r\n}\r\n\r\nexport default function NotificationCard({\r\n  description,\r\n  name,\r\n  profileImg,\r\n  todoUrl,\r\n  createdAt,\r\n}: Props): ReactElement {\r\n  return (\r\n    <Link to={`/todo/${todoUrl}`}>\r\n      <div className=\"dropdown-notification-card\">\r\n        <img\r\n          className=\"dropdown-notification-card-img\"\r\n          src={profileImg}\r\n          alt=\"\"\r\n        />\r\n        <div className=\"dropdown-notification-card-text-content\">\r\n          <div className=\"dropdown-notification-card-name\">{name}</div>\r\n          <div className=\"dropdown-notification-card-description\">\r\n            {description}\r\n          </div>\r\n        </div>\r\n        <div className=\"dropdown-notification-card-createdAt\">\r\n          {format(createdAt)}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React, { ReactElement, useEffect, useRef, useState } from 'react';\r\nimport NotificationCard from './NotificationCard';\r\nimport { profile } from 'console';\r\nimport { filterTodos } from '../../../redux/user-todos/user-todo.actions';\r\nimport { updateOneTodo } from '../../../utils/api/todos';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { updateOneNotification } from '../../../utils/api/notifications';\r\ninterface Props {\r\n  description: string;\r\n  name: string;\r\n  profileImg: string;\r\n  todoUrl: string;\r\n  seen: boolean,\r\n  id: string,\r\n  createdAt: Date, \r\n}\r\n\r\nexport default function NotificationCardContainer({\r\n  description,\r\n  name,\r\n  profileImg,\r\n  todoUrl,\r\n  seen,\r\n  id,\r\n  createdAt,\r\n}: Props): ReactElement {\r\n\r\n\r\n  return (\r\n    <NotificationCard\r\n      name={name}\r\n      createdAt={createdAt}\r\n      description={description}\r\n      profileImg={profileImg}\r\n      todoUrl={todoUrl}\r\n    />\r\n  );\r\n}\r\n","import React, { ReactElement, useState, useRef, useEffect } from 'react'\r\nimport {Notification} from '../../../types/notification'\r\nimport NotificationCard from './NotificationCard'\r\nimport './notifications.style.scss'\r\nimport NotificationCardContainer from './NotificationCard.container'\r\nimport { create } from 'domain'\r\ninterface Props {\r\n    notifications: Notification[]\r\n    onClick: () => void;\r\n}\r\n\r\nexport default function NotificationDropdownList({notifications, onClick}: Props): ReactElement {\r\n\r\n  const [toggleNotifications, setToggleNotifications] = useState(false);\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef);\r\n  \r\n  \r\n  function useOutsideAlerter(ref: any) {\r\n    useEffect(() => {\r\n      function handleClickOutside(event: any) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          setToggleNotifications(false);\r\n        }\r\n      }\r\n      \r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside);\r\n      };\r\n    }, [ref]);\r\n  }\r\n  \r\n  return (\r\n    <div onClick={onClick} className=\"notifications-dropdown-list\"> \r\n     {notifications.map(({_id, description, todo, seen, createdAt, createdBy: {name, profileImg} }) => {\r\n         return <NotificationCardContainer id={_id} seen={seen} createdAt={createdAt} todoUrl={todo} description={description} name={name} profileImg={profileImg} />\r\n       }\r\n     )}\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport './icon-hover.styles.scss'\r\ninterface Props {\r\nicon: ReactElement,\r\nonClick: () => void;   \r\n}\r\n\r\nexport default function IconHover({icon, onClick}: Props): ReactElement {\r\n  return (\r\n    <button onClick={onClick} className=\"icon-hover\">\r\n    {icon}\r\n    </button>\r\n  )\r\n}\r\n","import axios from 'axios';\r\nimport { TodoAndUser } from '../../types/todo';\r\nexport const postOneNotification = async (type: string, todo: TodoAndUser) => {\r\n  const response = await axios.post('/api/notifications', {\r\n    type,\r\n    todo,\r\n  });\r\n\r\n  return response\r\n};\r\n\r\n\r\nexport const updateOneNotification = async (id:string, updates: object) => {\r\n  const response = await axios.patch(`/api/notifications/${id}` , {\r\n    updates\r\n  })\r\n\r\n  return response\r\n}","import React, { ReactElement, useState, useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UserProfile from '../Shared/UserProfile/UserProfile';\r\nimport NotificationDropdownList from '../Shared/NotificationsDropdown/NotificationDropdownList';\r\nimport { Notification } from '../../types/notification';\r\nimport { startFetchNotifications } from '../../redux/notifications/notifications.actions';\r\nimport IconHover from '../Shared/IconHover/IconHover';\r\nimport { MdNotificationsNone } from 'react-icons/md';\r\nimport { updateOneNotification } from '../../utils/api/notifications';\r\n\r\ninterface Props {\r\n  profileImg: string;\r\n  name: string;\r\n  notifications: Notification[];\r\n  startFetchNotifications: () => void;\r\n  socket: any;\r\n}\r\n\r\nfunction UserProfileContainer({\r\n  profileImg,\r\n  name,\r\n  notifications,\r\n  socket,\r\n  startFetchNotifications,\r\n}: Props): ReactElement {\r\n  const [togglePopup, setTogglePopup] = useState(false);\r\n  const [unseenNotifications, setUnseenNotifications] = useState(0);\r\n  const wrapperRef = useRef(null);\r\n  const firstRender = useRef(false);\r\n  useOutsideAlerter(wrapperRef);\r\n\r\n  useEffect(() => {\r\n    startFetchNotifications();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    countUnseenNotifications();\r\n  }, [notifications]);\r\n\r\n  useEffect(() => {\r\n    socket.on('newNotification', () => {\r\n      startFetchNotifications()\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    firstRender.current = false;\r\n  }, []);\r\n\r\n\r\n  const handleToggleNotificationsClick = () => {\r\n    setUnseenNotifications(0);\r\n    setTogglePopup(!togglePopup);\r\n    markAllNotificationsAsSeen();\r\n  };\r\n\r\n  const markAllNotificationsAsSeen = async () => {\r\n    notifications.forEach(({ _id, seen }) => {\r\n      if (!seen) {\r\n        updateOneNotification(_id, { seen: true });\r\n      }\r\n    });\r\n  };\r\n\r\n  const countUnseenNotifications = () => {\r\n    const unseenNotifications = notifications.filter(\r\n      ({ seen }) => seen !== true\r\n    );\r\n    setUnseenNotifications(unseenNotifications.length);\r\n  };\r\n\r\n  function useOutsideAlerter(ref: any) {\r\n    useEffect(() => {\r\n      function handleClickOutside(event: any) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          setTogglePopup(false);\r\n        }\r\n      }\r\n\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside);\r\n      };\r\n    }, [ref]);\r\n  }\r\n\r\n  const handleOnToggleDropdownClick = () => {\r\n    setUnseenNotifications(0);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }} className=\"user-profile-container\">\r\n      <div ref={wrapperRef} className=\"user-profile-notification-wrap\">\r\n        <IconHover\r\n          icon={<MdNotificationsNone />}\r\n          onClick={handleToggleNotificationsClick}\r\n        />\r\n        {togglePopup && (\r\n          <NotificationDropdownList\r\n            onClick={handleOnToggleDropdownClick}\r\n            notifications={notifications}\r\n          />\r\n        )}\r\n        {unseenNotifications > 0 && <div className=\"user-profile-notification-number\">{unseenNotifications}</div>}\r\n      </div>\r\n      <UserProfile name={name} img={profileImg} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  profileImg: state.userInfo.user.profileImg,\r\n  name: state.userInfo.user.name,\r\n  notifications: state.notificationsInfo.notifications,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  startFetchNotifications: () => dispatch(startFetchNotifications()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserProfileContainer);\r\n","import axios from 'axios';\r\n\r\n\r\nexport const getNotifications = () => ({\r\n  type: 'GET_NOTIFICATIONS'\r\n})\r\n\r\nexport const notificationsRequestLoading = () => ({\r\n type: 'NOTIFICATION_REQUEST_LOADING' \r\n})\r\n\r\nexport const notificationRequestError = () => ({\r\n  type: 'NOTIFICATION_REQUEST_ERROR'\r\n})\r\n\r\nexport const notificationRequestSuccess = (notifications: Notification[]) => ({\r\n  type: 'NOTIFICATION_REQUEST_SUCCESS',\r\n  notifications\r\n})\r\n\r\nexport const startFetchNotifications = () => {\r\n  return async (dispatch: any, getState: any) => {\r\n    dispatch(notificationsRequestLoading())\r\n    try {\r\n      const response = await axios.get('/api/notifications')\r\n      if(response.data.length === 0) {\r\n        return \r\n      }\r\n      console.log(response)\r\n      dispatch(notificationRequestSuccess(response.data))\r\n    } catch (error) {\r\n      dispatch(notificationRequestError())\r\n    }\r\n  }\r\n}","import React, { ReactElement } from 'react';\r\nimport { format } from 'timeago.js';\r\n\r\ninterface Props {\r\n  message: string;\r\n  createdAt: Date;\r\n  profileImg: string;\r\n  name: string;\r\n}\r\n\r\nexport default function PublicChatMessage({\r\n  message,\r\n  createdAt,\r\n  profileImg,\r\n  name,\r\n}: Props): ReactElement {\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"public-chat-message-card\">\r\n      <img\r\n        className=\"public-chat-message-card-profile\"\r\n        src={profileImg}\r\n        alt=\"\"\r\n      />\r\n      <div className=\"public-chat-message-card-text-content\">\r\n        <div className=\"public-chat-message-card-name\">{name}</div>\r\n        <div className=\"public-chat-message-card-message\">{message}</div>\r\n      </div>\r\n      <div className=\"public-chat-message-card-created-at\">\r\n        {format(createdAt)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const scrollToBottom = (scrollRef: React.RefObject<HTMLDivElement>) => {\r\nif(scrollRef.current === null) {\r\n  return \r\n}\r\nconst bottom = scrollRef.current.scrollHeight\r\nreturn scrollRef.current.scrollTop = bottom\r\n}","import React, { ReactElement, useRef, useEffect } from 'react';\r\nimport PublicChatMessage from './PublicChatMessage';\r\nimport { Message } from '../../types/message';\r\nimport { profile } from 'console';\r\nimport './chat-message.style.scss';\r\nimport { scrollToBottom } from '../../utils/scroll/scrollToBottom';\r\nimport { filterTodos } from '../../redux/user-todos/user-todo.actions';\r\ninterface Props {\r\n  messages: Message[];\r\n}\r\n\r\nexport default function PublicChatList({ messages }: Props): ReactElement {\r\n  const listRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom(listRef);\r\n  }, []);\r\n\r\n  const trimMessage = (message: string) => {\r\n    if (message.length > 50) {\r\n      console.log(message.slice(0, 50), 'Skitan');\r\n      const trimmedMessage = `${message.slice(0, 100)}...`;\r\n      return trimmedMessage;\r\n    } else {\r\n      return message;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div ref={listRef} className=\"public-chat-list\">\r\n      {messages.map(({_id, message, createdAt, user: { name, profileImg } }) => {\r\n        return (\r\n          <PublicChatMessage\r\n            key={_id}\r\n            message={trimMessage(message)}\r\n            createdAt={createdAt}\r\n            name={name}\r\n            profileImg={profileImg}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Message } from '../../types/message';\r\nimport PublicChatList from './PublicChatList';\r\nimport PublicChatMessageSkeleton from './PublicChatMessage.skeleton';\r\nimport { dashboardStartFetchMessages } from '../../redux/dashboard-chat/dashboard-chat.types';\r\nimport LoadingSpinner from '../Shared/LoadingSpinner/LoadingSpinner';\r\nimport FailedFetch from '../Shared/FailedFetch/FailedFetch';\r\ninterface Props {\r\n  messages: Message[];\r\n  dashboardStartFetchMessages: () => void;\r\n  loading: boolean,\r\n  error: boolean,\r\n}\r\n\r\nfunction PublicChatContainer({\r\n  messages,\r\n  dashboardStartFetchMessages,\r\n  loading,\r\n  error\r\n}: Props): ReactElement {\r\n\r\n\r\n  useEffect(() => {\r\n    dashboardStartFetchMessages();\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  if(loading) {\r\n    return (\r\n      <div className=\"public-chat-list\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if(error) {\r\n    return (\r\n      <div className=\"public-chat-list\">\r\n        <FailedFetch text=\"Could not get messages\" onClick={() => dashboardStartFetchMessages()} />\r\n      </div>\r\n    )\r\n  }\r\n \r\n  return (\r\n    <div className=\"public-chat-container\">\r\n    <PublicChatList messages={messages} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  messages: state.dashboardMessagesInfo.messages,\r\n  error: state.dashboardMessagesInfo.messagesError,\r\n  loading: state.dashboardMessagesInfo.messagesLoading\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  dashboardStartFetchMessages: () => dispatch(dashboardStartFetchMessages()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PublicChatContainer);\r\n","import axios from 'axios';\r\nimport { Message } from '../../types/message';\r\n\r\n\r\nexport const dashboardMessageRequestLoading = () => ({\r\n  type: 'DASHBOARD_MESSAGE_REQUEST_LOADING',\r\n});\r\n\r\nexport const dashboardMessageRequestFailed = () => ({\r\n  type: 'DASHBOARD_MESSAGE_REQUEST_FAILED',\r\n});\r\n\r\nexport const dashboardMessageRequestSuccess = (messages: Message) => ({\r\n  type: 'DASHBOARD_MESSAGE_REQUEST_SUCCESS',\r\n  messages,\r\n});\r\n\r\nexport const addMessage = (message: Message) => ({\r\n  type: 'ADD_MESSAGE',\r\n  message\r\n})\r\n\r\nexport const addMessageAndRemoveOldest = (message: Message) => ({\r\n  type: \"ADD_MESSAGE_AND_REMOVE_OLDEST\",\r\n  message\r\n})\r\n\r\nexport const startAddMessage = (message: Message) => {\r\n  return (dispatch:any, getState: any) => {\r\n    const numberOfMessages = getState().dashboardMessagesInfo.messages.length\r\n\r\n    if(numberOfMessages >= 15) {\r\n      dispatch(addMessageAndRemoveOldest(message))\r\n    } else {\r\n      dispatch(addMessage(message))\r\n    }\r\n  }\r\n}\r\n\r\nexport const dashboardStartFetchMessages = () => {\r\n  return async (dispatch: any, getState: any) => {\r\n    dispatch(dashboardMessageRequestLoading());\r\n    try { \r\n      const response = await axios.get('/api/messages', {\r\n        params: {\r\n          limit: 15,\r\n          skip: 0,\r\n        },\r\n        \r\n      });\r\n      response.data.reverse()\r\n      dispatch(dashboardMessageRequestSuccess(response.data));\r\n\r\n\r\n    } catch (error) {\r\n      dispatch(dashboardMessageRequestFailed());\r\n    }\r\n  };\r\n};\r\n","import React, { ReactElement, ReactNode } from 'react'\r\nimport './container.scss'\r\ninterface Props {\r\n  children: ReactNode\r\n  className?: string\r\n}\r\n\r\nexport default function Container({children, className}: Props): ReactElement {\r\n  return (\r\n    <div className={`container ${className && className}`}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement, ReactNode, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NavbarContainer from '../../Navbar/Navbar.container';\r\nimport UserProfile from '../UserProfile/UserProfile';\r\nimport UserProfileContainer from '../../Dashboard/UserProfile.container';\r\nimport PublicChatContainer from '../../Dashboard/PublicChat.container';\r\nimport { useWindowWidth } from '@react-hook/window-size';\r\nimport './layout.styles.scss';\r\nimport Container from '../Container/Container';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\ninterface Props {\r\n  children: ReactNode;\r\n  profileImg: string;\r\n  name: string;\r\n  socket: any, \r\n}\r\n\r\n\r\n\r\n\r\nfunction Layout({ children, name, profileImg, socket}: Props): ReactElement {\r\n  const width = useWindowWidth();\r\n  const location = useLocation()\r\n  console.log(location.pathname)\r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"page-container-left\">\r\n        <NavbarContainer />\r\n      <Container className={location.pathname === \"/dashboard/user\" ||location.pathname === \"/dashboard/team\" ? \"container-overflow\" : \"container\"}>\r\n        <div className=\"layout-content\">{children}</div>\r\n      </Container>\r\n      </div>\r\n      {width > 1024 && (\r\n        <div className=\"page-container-right\">\r\n          <UserProfileContainer socket={socket}  />\r\n          <PublicChatContainer />\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  profileImg: state.userInfo.user.profileImg,\r\n  name: state.userInfo.user.name,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nexport class Portal extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props)\r\n    this.el = document.createElement('div')\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.getElementById('portal').appendChild(this.el)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.getElementById('portal').removeChild(this.el)\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(\r\n      this.props.children,\r\n      this.el\r\n    )\r\n  }\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport { Portal } from '../../../Portals/Portal';\r\nimport './modal.style.css';\r\nimport { IconBaseProps } from 'react-icons/lib';\r\ninterface Props {\r\n  title: string;\r\n  icon: IconBaseProps;\r\n  text: string;\r\n  iconBackground?: string,\r\n}\r\n\r\nexport default function Modal({ title, text, icon, iconBackground = \"#648CF6\" }: Props): ReactElement {\r\n  return (\r\n    <Portal>\r\n      <div className=\"bottom-modal\">\r\n        <div style={{background: iconBackground}} className=\"bottom-modal-icon\">\r\n        {icon}\r\n        </div>\r\n        <div className=\"bottom-modal-text-content\">\r\n          <div className=\"bottom-modal-title\">{title}</div>\r\n          <div className=\"bottom-modal-text\">{text}</div>\r\n        </div>\r\n      </div>\r\n    </Portal>\r\n  );\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport { Event } from '../../types/event';\r\nimport './dropdown.style.scss';\r\ninterface Props {\r\n  values: Values[];\r\n  label: string;\r\n  onChange: (event: Event) => void;\r\n  defaultValue?: string | number;\r\n}\r\n\r\ninterface Values {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nexport default function DropdownSelect({\r\n  values,\r\n  label,\r\n  onChange,\r\n  defaultValue,\r\n}: Props): ReactElement {\r\n  return (\r\n    <div className=\"dropdown-select-wrap\">\r\n      <label htmlFor=\"\">{label}</label>\r\n      <select\r\n        className=\"dropdown-select\"\r\n        onChange={(event) => onChange(event)}\r\n        name=\"\"\r\n      >\r\n        {values.map(({ name, value }) => {  \r\n\r\n          return (\r\n            <option\r\n              key={value}\r\n              selected={defaultValue === value}\r\n              style={{\r\n                marginBottom: '10px',\r\n                fontSize: '16px',\r\n                padding: '20px 20px',\r\n              }}\r\n              value={value}\r\n            >\r\n              {name}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const fetchAllUsers = async () => {\r\n  try {\r\n    const response = await axios.get('/api/users');\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport { NonSavedTodo, EditTodoInterface } from '../../types/todo';\r\n\r\nexport const postOneTodo = async (todoInfo: NonSavedTodo) => {\r\n  const response = await axios.post('/api/todos', {\r\n    todoInfo,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const fetchOneTodoWithTimeline = async (id: string) => {\r\n  const response = await axios.get(`/api/todos/${id}/timeline`);\r\n  return response;\r\n};\r\n\r\nexport const updateOneTodo = async (id: string, updates: object) => {\r\n  const response = await axios.patch(`/api/todos/${id}`, {\r\n    updates\r\n  });\r\n  return response;\r\n};\r\n\r\n\r\n\r\n\r\nexport const deleteOneTodo = async (id: string) => {\r\n  const response = await axios.delete(`/api/todos/${id}`)\r\n}","import React, { ReactElement } from 'react'\r\nimport {Event} from '../../../types/event'\r\nimport './input.style.css'\r\ninterface Props {\r\n  handleChange: (event: Event) => void; \r\n  placeholder?: string, \r\n  value: string, \r\n}\r\n\r\nexport default function Input({handleChange, placeholder, value}: Props): ReactElement {\r\n  return (\r\n    <>\r\n    <input className=\"input\" placeholder={placeholder} value={value} type=\"text\" onChange={event => handleChange(event)} />\r\n    </>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport Input from '../input/Input'\r\nimport {Event} from '../../../types/event'\r\nimport './input-label.style.css'\r\ninterface Props {\r\n  value: string,\r\n  onChange: (event: Event) => void; \r\n  label: string,\r\n  placeholder?: string\r\n}\r\n\r\nexport default function InputLabel({value, onChange, label, placeholder}: Props): ReactElement {\r\n  return (\r\n    <div className=\"input-label\">\r\n      <label className=\"input-label-label\">{label}</label>\r\n      <Input placeholder={placeholder} handleChange={event => onChange(event)} value={value} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport {Event} from '../../../types/event'\r\nimport './textarea.style.css'\r\ninterface Props {\r\n  onChange: (event: Event) => void; \r\n  value: string,\r\n  label?:string,\r\n  placeholder?: string, \r\n}\r\n\r\nexport default function Textarea({onChange, value, label, placeholder}: Props): ReactElement {\r\n  return (\r\n    <div className=\"textarea-wrap\">\r\n      {label && \r\n      <label className=\"textarea-label\" htmlFor=\"\">{label}</label>\r\n      }\r\n      <textarea placeholder={placeholder} className=\"textarea\" value={value} onChange={event => onChange(event)} name=\"\" id=\"\"></textarea>\r\n    </div>\r\n  )\r\n}\r\n","import { Timeline } from '../../types/timeline';\r\nimport axios from 'axios';\r\n\r\nexport const postOneTimeline = async (type: string, id: string, updates?: object) => {\r\n  const response = await axios.post('/api/timelines', {\r\n    type,\r\n    id,\r\n    updates\r\n  });\r\n  return response;\r\n};\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\nimport InputIcon from '../Shared/InputIcon/InputIcon';\r\nimport Input from '../Shared/input/Input';\r\nimport Layout from '../Shared/Layout/Layout';\r\nimport Container from '../Shared/Container/Container';\r\nimport Modal from '../Shared/modal/Modal';\r\nimport { useWindowWidth } from '@react-hook/window-size';\r\nimport DropdownSelect from './DropdownSelect';\r\nimport { fetchAllUsers } from '../../utils/api/users';\r\nimport { User } from '../../types/user';\r\nimport Button from '../Shared/Button/Button';\r\nimport { NonSavedTodo } from '../../types/todo';\r\nimport { postOneTodo, deleteOneTodo } from '../../utils/api/todos';\r\nimport { connect } from 'react-redux';\r\nimport { AiOutlineCheck, AiOutlineExclamation } from 'react-icons/ai';\r\nimport './create-todo.style.scss';\r\nimport InputLabel from '../Shared/InputLabel/InputLabel';\r\nimport Textarea from '../Shared/Textarea/Textarea';\r\nimport { postOneTimeline } from '../../utils/api/timeline';\r\nimport { postOneNotification } from '../../utils/api/notifications';\r\ninterface Props {\r\n  team: string;\r\n  userId: string;\r\n  socket: any\r\n  match: {\r\n    params: {\r\n      id: string;\r\n    };\r\n  };\r\n}\r\n\r\n\r\n\r\nfunction CreateTodoContainer({ team, match, userId, socket }: Props): ReactElement {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [users, setUsers] = useState([{ name: 'Unassigned', value: '' }]);\r\n  const [selectedUser, setSelectedUser] = useState('');\r\n  const [difficulty, setDifficulty] = useState('1');\r\n  const [urgency, setUrgency] = useState('1');\r\n  const [category, setCategory] = useState('Front End');\r\n  const [toggleSuccessModal, setToggleSuccessModal] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [toggleErrorModal, setToggleErrorModal] = useState(false);\r\n  const width = useWindowWidth();\r\n\r\n  interface UnassignedUser {\r\n    name: string;\r\n    value: null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [])\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    fetchAllUsers()\r\n      .then((res) => handleUserFetchSuccess(res.data))\r\n      .catch((error) => {\r\n        return;\r\n      });\r\n  }, []);\r\n\r\n  const handleUserFetchSuccess = (response: any) => {\r\n    // DropdownSelect expects name and value as a props so we modify the response array to correlate with props.\r\n    const userValues = response.map((user: any) => {\r\n      return { name: user.name, value: user._id };\r\n    });\r\n\r\n    setUsers([...users, ...userValues]);\r\n  };\r\n\r\n  const handleOnSaveClick = () => {\r\n    const todoInfo = {\r\n      title,\r\n      description,\r\n      user: selectedUser,\r\n      difficulty,\r\n      urgency,\r\n      category,\r\n      team,\r\n    };\r\n\r\n    // Remove user property if no user is selected.\r\n    if (todoInfo.user.length === 0) {\r\n      delete todoInfo.user;\r\n    }\r\n\r\n    createTodo(todoInfo);\r\n  };\r\n\r\n\r\n  const createTodo = async (todo: NonSavedTodo) => {\r\n    try {\r\n      const response = await postOneTodo(todo);\r\n      await postOneTimeline('create', response.data._id);\r\n\r\n      // Only create a notification if user has created a todo for someone else. \r\n      if (response.data.user !== null && response.data.user !== userId) {\r\n        await postOneNotification('create', response.data);\r\n        socket.emit('createTodo', response.data);\r\n      }\r\n\r\n\r\n      handleSaveSuccess()\r\n    } catch (error) {\r\n      console.log(error)\r\n      handleSaveError('Could not create todo');\r\n    }\r\n  };\r\n\r\n  const handleSaveError = (error: any) => {\r\n    setErrorMessage(error);\r\n    setToggleErrorModal(true);\r\n    setTimeout(() => {\r\n      setToggleErrorModal(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleSaveSuccess = () => {\r\n    setToggleSuccessModal(true);\r\n    setTitle('');\r\n    setDescription('');\r\n    setTimeout(() => {\r\n      setToggleSuccessModal(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const numberValues = [\r\n    {\r\n      value: '1',\r\n      name: '1',\r\n    },\r\n    {\r\n      value: '2',\r\n      name: '2',\r\n    },\r\n    {\r\n      value: '3',\r\n      name: '3',\r\n    },\r\n    {\r\n      value: '4',\r\n      name: '4',\r\n    },\r\n    {\r\n      value: '5',\r\n      name: '5',\r\n    },\r\n    {\r\n      value: '6',\r\n      name: '6',\r\n    },\r\n    {\r\n      value: '7',\r\n      name: '7',\r\n    },\r\n    {\r\n      value: '8',\r\n      name: '8',\r\n    },\r\n    {\r\n      value: '9',\r\n      name: '9',\r\n    },\r\n    {\r\n      value: '10',\r\n      name: '10',\r\n    },\r\n  ];\r\n  const todoCategories = [\r\n    {\r\n      value: 'Front End',\r\n      name: 'Front End',\r\n    },\r\n    {\r\n      value: 'Back End',\r\n      name: 'Back End',\r\n    },\r\n    {\r\n      value: 'UI',\r\n      name: 'UI',\r\n    },\r\n    {\r\n      value: 'UX',\r\n      name: 'UX',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"create-todo-page\">\r\n        <InputLabel\r\n          value={title}\r\n          label={'Title'}\r\n          onChange={(event) => setTitle(event.target.value)}\r\n        />\r\n        <Textarea\r\n          label={'Description'}\r\n          onChange={(event) => setDescription(event.target.value)}\r\n          value={description}\r\n        />\r\n        <div className=\"create-todo-dropdown-group\">\r\n          <DropdownSelect\r\n            onChange={(event) => setDifficulty(event.target.value)}\r\n            label=\"Difficulty\"\r\n            values={numberValues}\r\n          />\r\n          <DropdownSelect\r\n            onChange={(event) => setUrgency(event.target.value)}\r\n            label=\"Urgency\"\r\n            values={numberValues}\r\n          />\r\n        </div>\r\n        <div className=\"create-todo-dropdown-group\">\r\n          <DropdownSelect\r\n            onChange={(event) => setCategory(event.target.value)}\r\n            label=\"Category\"\r\n            values={todoCategories}\r\n          />\r\n          <DropdownSelect\r\n            onChange={(event) => setSelectedUser(event.target.value)}\r\n            label=\"User\"\r\n            values={users}\r\n          />\r\n        </div>\r\n        <Button onClick={handleOnSaveClick} text=\"Save\" />\r\n        {toggleSuccessModal && (\r\n          <Modal\r\n            icon={<AiOutlineCheck />}\r\n            title=\"Yay!\"\r\n            text=\"You created a new todo!\"\r\n          />\r\n        )}\r\n        {toggleErrorModal && (\r\n          <Modal\r\n            iconBackground=\"#EF5B5B\"\r\n            icon={<AiOutlineExclamation />}\r\n            title=\"Oops!\"\r\n            text={errorMessage}\r\n          />\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  team: state.userInfo.user.team,\r\n  userId: state.userInfo.user.id,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CreateTodoContainer);\r\n","import React, { ReactElement } from 'react'\r\nimport {Message} from '../../types/message'\r\nimport {format} from 'timeago.js'\r\ninterface Props {\r\n  message: string,\r\n  createdAt: Date,\r\n  currentUserMessage: boolean,\r\n}\r\n\r\nexport default function ChatBubble({message, currentUserMessage, createdAt}: Props): ReactElement {\r\n  \r\n  const chatBubbleStyle = () => {\r\n    return currentUserMessage ? \r\n    {background: \"#648CF6\", color:\"White\"}\r\n    :\r\n    {background: \"White\", color: \"#323232\"}\r\n  }\r\n\r\n \r\n  return (\r\n    <div style={chatBubbleStyle()} className=\"chat-bubble\">\r\n      <div className=\"chat-bubble-message\">{message}</div>\r\n      <div className=\"chat-bubble-createdAt\">{format(createdAt)}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react'\r\n\r\ninterface Props {\r\n  sizeInPixels: string,\r\n  img: string,\r\n}\r\n\r\nexport default function ChatProfileImg({sizeInPixels, img}: Props): ReactElement {\r\n  \r\n  const imageSize = {\r\n    height: sizeInPixels,\r\n    width: sizeInPixels \r\n  }\r\n  \r\n  return (\r\n    <div className=\"chat-profile-img\">\r\n      <img style={imageSize} src={img} alt=\"\"/>\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport ChatBubble from './ChatBubble';\r\nimport ChatProfileImg from './ChatProfileImg';\r\n\r\ninterface Props {\r\n  createdAt: Date;\r\n  message: string;\r\n  userId: string;\r\n  id: string;\r\n  profileImg: string;\r\n}\r\n\r\nexport default function TeamMessage({\r\n  createdAt,\r\n  message,\r\n  userId,\r\n  id,\r\n  profileImg,\r\n}: Props): ReactElement {\r\n  const marginStyle = () => {\r\n    // Check if message was made by user\r\n    return userId === id\r\n      ? { display: 'Flex', justifyContent: 'flex-end' }\r\n      : { marginLeft: 0 };\r\n  };\r\n\r\n  return (\r\n    <div style={marginStyle()} className=\"team-message-wrap\">\r\n      <div className=\"team-message\">\r\n        <ChatBubble\r\n          createdAt={createdAt}\r\n          message={message}\r\n          currentUserMessage={userId === id ? true : false}\r\n        />\r\n        <ChatProfileImg sizeInPixels={'40px'} img={profileImg} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {\r\n  ReactElement,\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport { Message } from '../../types/message';\r\nimport TeamMessage from './TeamMessage';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  changeScrollPosition,\r\n} from '../../redux/team-chat/team-chat.actions';\r\nimport Button from '../Shared/Button/Button';\r\nimport { scrollToBottom } from '../../utils/scroll/scrollToBottom';\r\n\r\n\r\ninterface Props {\r\n  messages: Message[];\r\n  userId: string;\r\n  onTopClick: () => void;\r\n  allMessagesSeen: boolean;\r\n  numberOfResponses: number;\r\n  loading: boolean;\r\n  skip: number;\r\n  id: string; \r\n}\r\n\r\nfunction TeamMessageList({\r\n  numberOfResponses,\r\n  messages,\r\n  onTopClick,  \r\n  allMessagesSeen,\r\n  skip, \r\n  loading,\r\n  id\r\n}: Props): ReactElement {\r\n  const listRef = useRef(null);\r\n  const firstMount = useRef(true);\r\n\r\n  const findUserScrollPosition = () => {\r\n\r\n    // Ignore scroll hijacking when user recieves message from socket. \r\n    if(numberOfResponses === 1) {\r\n      return\r\n    }\r\n\r\n    // @ts-ignore\r\n    listRef.current.scrollTop = listRef.current.children[numberOfResponses -1].offsetTop\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n   if(!firstMount.current) findUserScrollPosition();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if(!firstMount.current) {\r\n      const lastMessage = messages[messages.length - 1]\r\n      console.log(lastMessage)\r\n    \r\n      if(id === lastMessage.user._id && numberOfResponses === 1) {\r\n        scrollToBottom(listRef)\r\n      }\r\n\r\n    }\r\n  }, [messages])\r\n\r\n  useEffect(() => {\r\n   scrollToBottom(listRef)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    firstMount.current = false;\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"team-messages-list\">\r\n      <div ref={listRef} className=\"team-messages-message-list\">\r\n      <div className=\"team-messages-list-load-content\">\r\n        {allMessagesSeen ? (\r\n          <div className=\"team-messages-list-seen\">All messages seen</div>\r\n        ) : (\r\n          <Button\r\n            className=\"btn-outline\"\r\n            text=\"Load more messages\"\r\n            onClick={event => {console.log(event); onTopClick()}}\r\n          />\r\n        )}\r\n      </div>\r\n        {messages.map(\r\n          ({\r\n            _id: messageId,\r\n            message,\r\n            createdAt,\r\n            user: { name, profileImg, _id: userId },\r\n          }) => {\r\n            return (\r\n              <TeamMessage\r\n                key={messageId}\r\n                message={message}\r\n                createdAt={createdAt}\r\n                profileImg={profileImg}\r\n                userId={userId}\r\n                id={id}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  listScrollPosition: state.teamMessagesInfo.listScrollPosition,\r\n  allMessagesSeen: state.teamMessagesInfo.allMessagesSeen,\r\n  numberOfResponses: state.teamMessagesInfo.numberOfResponses,\r\n  loading: state.teamMessagesInfo.messagesLoading,\r\n  skip: state.teamMessagesInfo.skip,\r\n  id: state.userInfo.user.id\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  changeScrollPosition: (position: number | null) =>\r\n    dispatch(changeScrollPosition(position)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamMessageList);\r\n","import axios from 'axios';\r\nimport { Message } from '../../types/message';\r\n\r\nexport const getMessages = () => ({\r\n  type: 'GET_MESSAGES',\r\n});\r\n\r\nexport const messageRequestLoading = () => ({\r\n  type: 'MESSAGE_REQUEST_LOADING',\r\n});\r\n\r\nexport const messageRequestFailed = () => ({\r\n  type: 'MESSAGE_REQUEST_FAILED',\r\n});\r\n\r\nexport const messageRequestSuccess = (messages: Message[]) => ({\r\n  type: 'MESSAGE_REQUEST_SUCCESS',\r\n  messages,\r\n});\r\n\r\n\r\nexport const removeChatMessages = () => ({\r\n  type: \"REMOVE_CHAT_MESSAGES\"\r\n})\r\n\r\nexport const addMessage = (message: Message) => ({\r\n  type: \"ADD_ONE_MESSAGE\",\r\n  message\r\n})\r\n\r\nexport const incrementSkip = () => ({\r\n  type: 'INCREMENT_SKIP'\r\n})\r\n\r\nexport const changeScrollPosition = (position: number | null) => ({\r\n  type: \"CHANGE_SCROLL_POSITION\",\r\n  payload: position \r\n})\r\n\r\nexport const allMessagesSeen = () => ({\r\n  type: \"ALL_MESSAGES_SEEN\"\r\n})\r\n\r\nexport const stopLoading = () => ({\r\n  type: \"STOP_LOADING\"\r\n})\r\n\r\nexport const startFetchMessages = () => {\r\n  return async (dispatch: any, getState: any) => {\r\n    if(getState().teamMessagesInfo.skip === 0) {\r\n      dispatch(messageRequestLoading());\r\n    }\r\n    try {\r\n      const {skip, limit} = getState().teamMessagesInfo;\r\n      const response = await axios.get('/api/messages', {\r\n        params: {\r\n          skip,\r\n          limit,\r\n        },\r\n        \r\n      });\r\n\r\n      response.data.reverse()\r\n      return response.data.length === 0 && getState().teamMessagesInfo.skip > 0 ?\r\n      dispatch(allMessagesSeen())\r\n      :\r\n      dispatch(messageRequestSuccess(response.data))\r\n    } catch (error) {\r\n      dispatch(messageRequestFailed());\r\n    }\r\n  };\r\n};\r\n","import axios from 'axios'\r\n\r\nexport const postOneMessage = async (message: string) => {\r\n const response = await axios.post('/api/messages', {\r\n    message\r\n  })\r\n  return response\r\n}","import React, { ReactElement } from 'react'\r\nimport './icon-color.style.scss'\r\ninterface Props {\r\nicon: ReactElement,\r\nonClick: () => void;   \r\n}\r\n\r\nexport default function IconColor({icon, onClick}: Props): ReactElement {\r\n  return (\r\n    <button onClick={onClick} className=\"icon-color\">\r\n    {icon}\r\n    </button>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Textarea from '../Shared/Textarea/Textarea';\r\nimport Button from '../Shared/Button/Button';\r\nimport IconHover from '../Shared/IconHover/IconHover';\r\nimport { AiOutlineSend } from 'react-icons/ai';\r\nimport { Event } from '../../types/event';\r\nimport './write-message-toolbar.styles.scss'\r\nimport IconColor from '../Shared/IconColor/IconColor';\r\ninterface Props {\r\n  messageValue: string;\r\n  onSendClick: () => void;\r\n  onChange: (event: Event) => void;\r\n}\r\n\r\nexport default function WriteMessageToolbar({\r\n  messageValue,\r\n  onChange,\r\n  onSendClick,\r\n}: Props): ReactElement {\r\n  return (\r\n    <div className=\"write-message-toolbar\">\r\n      <Textarea placeholder={\"Write a message here...\"} value={messageValue} onChange={(event) => onChange(event)} />\r\n      <IconColor onClick={onSendClick} icon={<AiOutlineSend />} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { ReactElement, useState, useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TeamMessageList from './TeamMessageList';\r\nimport { Message } from '../../types/message';\r\nimport './chat.styles.scss';\r\nimport Container from '../Shared/Container/Container';\r\nimport { Event } from '../../types/event';\r\nimport { postOneMessage } from '../../utils/api/messages';\r\nimport WriteMessageToolbar from './WriteMessageToolbar';\r\nimport {\r\n  startFetchMessages,\r\n  incrementSkip,\r\n  removeChatMessages,\r\n  addMessage,\r\n} from '../../redux/team-chat/team-chat.actions';\r\nimport LoadingSpinner from '../Shared/LoadingSpinner/LoadingSpinner';\r\nimport { startAddMessage } from '../../redux/dashboard-chat/dashboard-chat.types';\r\nimport FailedFetch from '../Shared/FailedFetch/FailedFetch';\r\ninterface Props {\r\n  messages: Message[];\r\n  id: string;\r\n  startFetchMessages: () => void;\r\n  incrementSkip: () => void;\r\n  skip: number;\r\n  currentScroll: number;\r\n  removeChatMessages: () => void;\r\n  addMessage: (message: Message) => void;\r\n  loading: boolean;\r\n  addDashboardMessage: (message: Message) => void;\r\n  error: boolean;\r\n  socket: any; \r\n}\r\n\r\n\r\nfunction TeamChatContainer({\r\n  addDashboardMessage,\r\n  removeChatMessages,\r\n  messages,\r\n  id,\r\n  startFetchMessages,\r\n  incrementSkip,\r\n  skip,\r\n  addMessage,\r\n  loading,\r\n  error,\r\n  socket,\r\n}: Props): ReactElement {\r\n  const [message, setMessage] = useState('');\r\n  const didMount = useRef(true);\r\n\r\n  useEffect(() => {\r\n    startFetchMessages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on('message', (newMessage: any) => {\r\n      if (newMessage) {\r\n        addMessage(newMessage);\r\n        addDashboardMessage(newMessage);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleOnMessageChange = (event: Event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const handleMessageSubmitClick = () => {\r\n    return message.length === 0 ? null : saveMessage();\r\n  };\r\n\r\n  const saveMessage = () => {\r\n    postOneMessage(message)\r\n      .then((response) => {\r\n        socket.emit('sendTeamMessage', response.data);\r\n        setMessage(''); \r\n      })\r\n      .catch((error) => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  const handleOnTopClick = () => {\r\n    incrementSkip();\r\n    startFetchMessages();\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <FailedFetch text=\"Could not get messages\" onClick={startFetchMessages} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"team-chat-page\">\r\n      <Container>\r\n        <TeamMessageList\r\n          onTopClick={handleOnTopClick}\r\n          userId={id}\r\n          messages={messages}\r\n        />\r\n      </Container>\r\n      <WriteMessageToolbar\r\n        messageValue={message}\r\n        onSendClick={handleMessageSubmitClick}\r\n        onChange={(event) => handleOnMessageChange(event)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  messages: state.teamMessagesInfo.messages,\r\n  id: state.userInfo.user.id,\r\n  skip: state.teamMessagesInfo.skip,\r\n  currentScroll: state.teamMessagesInfo.currentScroll,\r\n  loading: state.teamMessagesInfo.messagesLoading,\r\n  error: state.teamMessagesInfo.messageError,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  startFetchMessages: () => dispatch(startFetchMessages()),\r\n  incrementSkip: () => dispatch(incrementSkip()),\r\n  removeChatMessages: () => dispatch(removeChatMessages()),\r\n  addMessage: (message: Message) => dispatch(addMessage(message)),\r\n  addDashboardMessage: (message: Message) => dispatch(startAddMessage(message)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamChatContainer);\r\n","import React, { ReactElement } from 'react';\r\ninterface Props {}\r\n\r\nexport default function TodoCardSkeleton({}: Props): ReactElement {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { Todo } from '../../types/todo';\r\n\r\nexport const fetchTodosLoading = () => ({\r\n  type: 'TODOS_REQUEST_LOADING',\r\n});\r\n\r\nexport const fetchTodosFailed = () => ({\r\n  type: 'TODOS_REQUEST_FAILED',\r\n});\r\n\r\nexport const fetchTodosSuccess = (todos: Todo) => ({\r\n  type: 'TODOS_REQUEST_SUCCESS',\r\n  todos,\r\n});\r\n\r\nexport const filterTodos = (todos: Todo) => ({\r\n  type: 'FILTER_TODOS',\r\n  todos,\r\n});\r\n\r\nexport const searchTodos = (todos: Todo) => ({\r\n  type: 'SEARCH_TODOS',\r\n  todos,\r\n});\r\n\r\nexport const sortTodosAsc = () => ({\r\n  type: 'SORT_TODOS_ASC',\r\n});\r\n\r\nexport const sortTodosCreatedAtNewest = () => ({\r\n  type: \"SORT_TODOS_CREATED_AT_NEWEST\"\r\n})\r\n\r\nexport const sortTodosCreatedAtOldest = () => ({\r\n  type: \"SORT_TODOS_CREATED_AT_OLDEST\"\r\n})\r\n\r\nexport const setFilter = (filter: string) => ({\r\n  type: 'SET_FILTER',\r\n  filter,\r\n});\r\n\r\nexport const setSort = (sort: string) => ({\r\n  type: 'SET_SORT',\r\n  sort,\r\n});\r\n\r\nexport const sortByUrgencyDsc = () => ({\r\n  type: \"SORT_TODOS_URGENCY_DSC\"\r\n})\r\n\r\n\r\nexport const sortByDifficultyDsc = () => ({\r\n  type: \"SORT_TODOS_DIFFICULTY_DSC\"\r\n})\r\n\r\nexport const setSearch = (search: string) => ({\r\n  type: 'SET_SEARCH',\r\n  search,\r\n});\r\n\r\nexport const clearState = () => ({\r\n  type: 'CLEAR_STATE',\r\n\r\n})\r\n\r\n\r\nexport const startSortTodos = () => {\r\n  return (dispatch: any, getState: any) => {\r\n    const sortValue = getState().teamTodoInfo.sort \r\n\r\n    if (sortValue === 'oldest') {\r\n      return dispatch(sortTodosCreatedAtOldest());\r\n    }\r\n\r\n    if (sortValue === \"newest\") {\r\n      return dispatch(sortTodosCreatedAtNewest())\r\n    }\r\n\r\n    if(sortValue === \"urgency\") {\r\n      return dispatch(sortByUrgencyDsc())\r\n    }\r\n\r\n    if(sortValue === \"difficulty\") {\r\n      return dispatch(sortByDifficultyDsc())\r\n    }\r\n  };\r\n};\r\n\r\nexport const startSearchTodo = () => {\r\n  return async (dispatch: any, getState: any) => {\r\n    dispatch(fetchTodosLoading());\r\n    try {\r\n      const response = await axios.get('/api/todos/team');\r\n      return getState().teamTodoInfo.search.length === 0\r\n        ? dispatch(fetchTodosSuccess(response.data))\r\n        : dispatch(searchTodos(response.data));\r\n    } catch (error) {\r\n      \r\n      dispatch(fetchTodosFailed());\r\n    }\r\n  };\r\n};\r\n\r\nexport const startFilterTodos = () => {\r\n  return async (dispatch: any, getState: any) => {\r\n    dispatch(fetchTodosLoading());\r\n    try {\r\n      const response = await axios.get('/api/todos/team');\r\n      return getState().teamTodoInfo.filter === 'All'\r\n        ? dispatch(fetchTodosSuccess(response.data))\r\n        : dispatch(filterTodos(response.data));\r\n    } catch (error) {\r\n      dispatch(fetchTodosFailed());\r\n    }\r\n  };\r\n};\r\n\r\nexport const startFetchTodos = () => {\r\n  return async (dispatch: any, getState: any) => {\r\n    dispatch(fetchTodosLoading());\r\n\r\n    try {\r\n      const response = await axios.get('/api/todos/team');\r\n      dispatch(fetchTodosSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(fetchTodosFailed());\r\n    }\r\n  };\r\n};\r\n","import React, { ReactElement, useEffect, useRef } from 'react';\r\nimport FilterOptions from './FilterOptions';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  startSortTodos,\r\n  startFilterTodos,\r\n  setSort,\r\n  setFilter,\r\n} from '../../redux/team-todos/team-todos.actions';\r\n\r\ninterface Props {\r\n  sortTodos: () => void;\r\n  filterTodos: () => void;\r\n  filter: string;\r\n  sort: string;\r\n  setSort: (sort: string) => void;\r\n  setFilter: (filter: string) => void;\r\n}\r\n\r\nfunction TeamFilterOptionsContainer({\r\n  sortTodos,\r\n  filterTodos,\r\n  filter,\r\n  sort,\r\n  setSort,\r\n  setFilter,\r\n}: Props): ReactElement {\r\n  const firstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (!firstRender.current) sortTodos();\r\n  }, [sort]);\r\n\r\n  useEffect(() => {\r\n    if (!firstRender.current) {\r\n      filterTodos();\r\n    }\r\n  }, [filter]);\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) firstRender.current = false;\r\n  }, []);\r\n\r\n  const handleChangeFilterClick = (value: string) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  const handleChangeSortClick = (value: string) => {\r\n    setSort(value);\r\n  };\r\n\r\n  return (\r\n    <FilterOptions\r\n      filter={filter}\r\n      sort={sort}\r\n      onChangeSortClick={(value) => handleChangeSortClick(value)}\r\n      onChangeFilterClick={(value) => handleChangeFilterClick(value)}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  filter: state.teamTodoInfo.filter,\r\n  sort: state.teamTodoInfo.sort,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  setFilter: (filter: string) => dispatch(setFilter(filter)),\r\n  setSort: (sort: string) => dispatch(setSort(sort)),\r\n  sortTodos: () => dispatch(startSortTodos()),\r\n  filterTodos: () => dispatch(startFilterTodos()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TeamFilterOptionsContainer);\r\n","import React, { ReactElement, useState, useEffect, useRef } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport FailedFetch from '../Shared/FailedFetch/FailedFetch';\r\nimport TodoCardSkeleton from './TodoCard.skeleton';\r\nimport TodosList from './TodosList';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  startSortTodos,\r\n  startFilterTodos,\r\n  setSort,\r\n  setFilter,\r\n  startFetchTodos,\r\n  setSearch,\r\n  startSearchTodo,\r\n} from '../../redux/team-todos/team-todos.actions';\r\nimport { TodoAndUser } from '../../types/todo';\r\nimport './dashboard.scss';\r\nimport TeamFilterOptionsContainer from './TeamFilterOptions.container';\r\ninterface Props {\r\n  loading: boolean;\r\n  error: boolean;\r\n  todos: TodoAndUser[];\r\n  startFetchTodos: () => void;\r\n  filter: string;\r\n  sort: string;\r\n  sortUrgencyDsc: () => void;\r\n  sortDifficultyDsc: () => void;\r\n  search: string;\r\n  setSearch: (value: string) => void;\r\n  startSearchTodo: () => void; \r\n}\r\n\r\nfunction TeamDashboardContainer({\r\n  loading,\r\n  error,\r\n  todos,\r\n  startFetchTodos,\r\n  sort,\r\n  filter,\r\n  sortUrgencyDsc,\r\n  sortDifficultyDsc,\r\n  startSearchTodo,\r\n  setSearch,\r\n  search,\r\n}: Props): ReactElement {\r\n  const firstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    startFetchTodos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!firstRender.current) startSearchTodo();\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    if (!firstRender.current) {\r\n    }\r\n  }, [sort]);\r\n\r\n  useEffect(() => {\r\n    if (firstRender) {\r\n      firstRender.current = false;\r\n    }\r\n\r\n  }, []);\r\n\r\n  const onSearchChange = (value: string) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const handleRetryClick = () => {\r\n    startFetchTodos();\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-page\">\r\n      <SearchBar\r\n        placeholder=\"Search Team Todos\"\r\n        onChange={(value) => onSearchChange(value)}\r\n        value={search}\r\n      />\r\n      <TeamFilterOptionsContainer />\r\n      {error && (\r\n        <FailedFetch text=\"Could not get todos\" onClick={handleRetryClick} />\r\n      )}\r\n      {todos.length === 0 && !error && !loading && (\r\n        <div>Your team currently have no unassigned {filter} todos.</div>\r\n      )}\r\n      {loading ? <TodoCardSkeleton /> : <TodosList todos={todos} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  loading: state.teamTodoInfo.loading,\r\n  search: state.teamTodoInfo.search,\r\n  error: state.teamTodoInfo.error,\r\n  todos: state.teamTodoInfo.todos,\r\n  filter: state.teamTodoInfo.filter,\r\n  sort: state.teamTodoInfo.sort,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  startFetchTodos: () => dispatch(startFetchTodos()),\r\n  setFilter: (filter: string) => dispatch(setFilter(filter)),\r\n  setSort: (sort: string) => dispatch(setSort(sort)),\r\n  sortTodos: () => dispatch(startSortTodos()),\r\n  filterTodos: () => dispatch(startFilterTodos()),\r\n  setSearch: (search: string) => dispatch(setSearch(search)),\r\n  startSearchTodo: () => dispatch(startSearchTodo())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TeamDashboardContainer);\r\n","import React, { ReactElement, ReactChild } from 'react';\r\nimport { Portal } from '../../../Portals/Portal';\r\nimport './fullscreen-modal.style.scss';\r\nimport {AiOutlineClose} from 'react-icons/ai'\r\nimport IconHover from '../IconHover/IconHover';\r\ninterface Props {\r\n  children: any;\r\n  onOutsideClick: () => void;\r\n  onCloseModalClick: () => void;\r\n}\r\n\r\nexport default function FullscreenModal({ children, onOutsideClick, onCloseModalClick }: Props): ReactElement {\r\n\r\n\r\n\r\n  return (\r\n    <Portal>\r\n      <div onClick={event =>  {event.stopPropagation(); onOutsideClick()}} className=\"fullscreen-modal\">\r\n        <div onClick={e => e.stopPropagation()} className=\"fullscreen-modal-content\">\r\n          <IconHover onClick={onCloseModalClick} icon={<AiOutlineClose />} />\r\n          {children}\r\n        \r\n        </div>\r\n      </div>\r\n    </Portal>\r\n  );\r\n}\r\n","import React, { ReactElement, useState, useEffect } from 'react';\r\nimport FullscreenModal from '../Shared/FullscreenModal/FullscreenModal';\r\nimport { FaCog } from 'react-icons/fa';\r\nimport IconHover from '../Shared/IconHover/IconHover';\r\nimport Button from '../Shared/Button/Button';\r\nimport { Todo, TodoAndUser } from '../../types/todo';\r\nimport {SelectOption} from '../../types/form'\r\nimport Input from '../Shared/input/Input';\r\nimport InputLabel from '../Shared/InputLabel/InputLabel';\r\nimport DropdownSelect from '../CreateTodo/DropdownSelect';\r\nimport './edit-todo.style.scss'\r\nimport {EditTodoInterface} from '../../types/todo'\r\ninterface Props {\r\n  onOutsideClick: () => void;\r\n  onSaveClick: (changes: EditTodoInterface) => void;\r\n  todo: TodoAndUser;\r\n  users: SelectOption[];\r\n  onCloseModalClick: () => void;\r\n}\r\n\r\ninterface Values {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\n\r\nexport default function EditTodo({\r\n  todo,\r\n  onSaveClick,\r\n  users,\r\n  onOutsideClick,\r\n  onCloseModalClick\r\n}: Props): ReactElement {\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [selectedUser, setSelectedUser] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(todo.category);\r\n  const [urgency, setUrgency] = useState(todo.urgency);\r\n  const [difficulty, setDifficulty] = useState(todo.difficulty);\r\n\r\n  const numberValues = [\r\n    {\r\n      value: '1',\r\n      name: '1',\r\n    },\r\n    {\r\n      value: '2',\r\n      name: '2',\r\n    },\r\n    {\r\n      value: '3',\r\n      name: '3',\r\n    },\r\n    {\r\n      value: '4',\r\n      name: '4',\r\n    },\r\n    {\r\n      value: '5',\r\n      name: '5',\r\n    },\r\n    {\r\n      value: '6',\r\n      name: '6',\r\n    },\r\n    {\r\n      value: '7',\r\n      name: '7',\r\n    },\r\n    {\r\n      value: '8',\r\n      name: '8',\r\n    },\r\n    {\r\n      value: '9',\r\n      name: '9',\r\n    },\r\n    {\r\n      value: '10',\r\n      name: '10',\r\n    },\r\n  ];\r\n  const todoCategories = [\r\n    {\r\n      value: 'Front End',\r\n      name: 'Front End',\r\n    },\r\n    {\r\n      value: 'Back End',\r\n      name: 'Back End',\r\n    },\r\n    {\r\n      value: 'UI',\r\n      name: 'UI',\r\n    },\r\n    {\r\n      value: 'UX',\r\n      name: 'UX',\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <FullscreenModal onCloseModalClick={onCloseModalClick} onOutsideClick={onOutsideClick}>\r\n      <div className=\"todo-edit\">\r\n        <InputLabel\r\n          label=\"Title\"\r\n          placeholder={todo.title}\r\n          value={title}\r\n          onChange={(event) => setTitle(event.target.value)}\r\n        />\r\n        <InputLabel\r\n          label=\"Description\"\r\n          value={description}\r\n          placeholder={todo.description}\r\n          onChange={(event) => setDescription(event.target.value)}\r\n\r\n        />\r\n        <div className=\"todo-edit-section\">\r\n          <DropdownSelect\r\n            onChange={(event) => setSelectedUser(event.target.value)}\r\n            label=\"User\"\r\n            values={users}\r\n            defaultValue={todo.user === null ? \"null\" : todo.user._id}\r\n          />\r\n          <DropdownSelect\r\n            onChange={(event) => setSelectedCategory(event.target.value)}\r\n            label=\"Category\"\r\n            values={todoCategories}\r\n            defaultValue={todo.category}\r\n          />\r\n        </div>\r\n        <div className=\"todo-edit-section\">\r\n          <DropdownSelect\r\n            onChange={(event) => setUrgency(event.target.value)}\r\n            label=\"Urgency\"\r\n            values={numberValues}\r\n            defaultValue={todo.urgency.toString()}\r\n          />\r\n          <DropdownSelect\r\n            onChange={(event) => setDifficulty(event.target.value)}\r\n            label=\"Difficulty\"\r\n            values={numberValues}\r\n            defaultValue={todo.difficulty.toString()}\r\n          />\r\n        </div>\r\n        <Button onClick={() => onSaveClick({title, description, urgency, selectedCategory, difficulty, selectedUser})} text=\"Save\" />\r\n    </div>\r\n      </FullscreenModal>\r\n  );\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport { format } from 'timeago.js';\r\n\r\ninterface Props {\r\n  title: string;\r\n  description: string;\r\n  urgency: string;\r\n  difficulty: string;\r\n  category: string;\r\n  selectedUser: string;\r\n  profileImg?: string;\r\n}\r\n\r\nexport default function TodoInfo({\r\n  title,\r\n  description,\r\n  urgency,\r\n  difficulty,\r\n  category,\r\n  selectedUser,\r\n  profileImg,\r\n}: Props): ReactElement {\r\n  return (\r\n    <div className=\"todo-info\">\r\n      {profileImg ? (\r\n        <div className=\"todo-info-section-wrap todo-info-section-profile\">\r\n          <img className=\"todo-info-profile\" src={profileImg} alt=\"\" />\r\n          <div className=\"todo-info-user\">{selectedUser}</div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"todo-info-section-wrap todo-info-section-profile\">\r\n          <div>Unassigned</div>\r\n        </div>\r\n      )}\r\n      <div className=\"todo-info-section-wrap\">\r\n        <div className=\"todo-info-title\">{title}</div>\r\n        <div className=\"todo-info-description\">{description}</div>\r\n      </div>\r\n      <div className=\"todo-info-section-flex\">\r\n        <div className=\"todo-info-section-wrap\">\r\n          <div className=\"todo-info-label\">Urgency</div>\r\n          <div className=\"todo-info-urgency\">{urgency}</div>\r\n        </div>\r\n        <div className=\"todo-info-section-wrap\">\r\n          <div className=\"todo-info-label\">Difficulty</div>\r\n          <div className=\"todo-info-difficulty\">{difficulty}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"todo-info-section-flex\">\r\n        <div className=\"todo-info-section-wrap\">\r\n          <div className=\"todo-info-label\">Category</div>\r\n          <div className=\"todo-info-category\">{category}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport {format} from 'timeago.js'\r\n\r\ninterface Props {\r\n  message: string;\r\n  name: string;\r\n  createdAt: string;\r\n  profileImg: string;\r\n}\r\n\r\nexport default function TodoTimeline({\r\n  message,\r\n  name,\r\n  createdAt,\r\n  profileImg,\r\n}: Props): ReactElement {\r\n  return (\r\n    <div className=\"timeline\">\r\n      <div className=\"timeline-content-wrap\">\r\n        <img className=\"timeline-img\" src={profileImg} alt=\"\" />\r\n        <div className=\"timeline-name\">{name}</div>\r\n      </div>\r\n      <div className=\"timeline-message\">{message}</div>\r\n      <div className=\"timeline-createdAt\">{format(createdAt)}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport { timeline } from 'console'\r\nimport TodoTimeline from './TodoTimeline'\r\nimport './timeline.style.scss'\r\ninterface Props {\r\n  timelines: []\r\n}\r\n\r\nexport default function TimelineList({timelines}: Props): ReactElement {\r\n  \r\n  if(!timelines) {\r\n    return <div>Loading</div>\r\n  }\r\n  \r\n  return (\r\n\r\n    <div className=\"timeline-list\">\r\n    {timelines.map(({message, createdAt, user: {name, profileImg}}) => {\r\n      return <TodoTimeline message={message} createdAt={createdAt} name={name} profileImg={profileImg} />\r\n    })}  \r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport './modal-confirm.scss'\r\nimport Button from '../Button/Button'\r\ninterface Props {\r\n  text: string,\r\n  onNoClick: () => void; \r\n  onYesClick: () => void;\r\n}\r\n\r\nexport default function ModalConfirm({text, onYesClick, onNoClick}: Props): ReactElement {\r\n  return (\r\n    <div className=\"modal-confirm\">\r\n      <div className=\"modal-confirm-title\">Hold up!</div>\r\n      <div className=\"modal-confirm-text\">{text}</div>\r\n      <div className=\"modal-confirm-button-wrap\">\r\n      <Button text=\"Yes\" onClick={onYesClick} />\r\n      <Button className=\"btn-decline\" text=\"No\" onClick={onNoClick} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\nimport {\r\n  fetchOneTodoWithTimeline,\r\n  updateOneTodo,\r\n  deleteOneTodo,\r\n} from '../../utils/api/todos';\r\nimport LoadingSpinner from '../Shared/LoadingSpinner/LoadingSpinner';\r\nimport { EditTodoInterface } from '../../types/todo';\r\nimport EditTodo from './EditTodo';\r\nimport {\r\n  AiFillDelete,\r\n  AiFillEdit,\r\n  AiOutlineCheck,\r\n  AiOutlineRedo,\r\n} from 'react-icons/ai';\r\nimport TodoInfo from './TodoInfo';\r\nimport { TodoAndUser } from '../../types/todo';\r\nimport { useWindowWidth } from '@react-hook/window-size';\r\nimport TimelineList from './TimelineList';\r\nimport './todo-info.style.scss';\r\nimport IconHover from '../Shared/IconHover/IconHover';\r\nimport { fetchAllUsers } from '../../utils/api/users';\r\nimport { User } from '../../types/user';\r\nimport { SelectOption } from '../../types/form';\r\nimport userPlaceholder from '../../media/placeholder-user.svg';\r\nimport FullscreenModal from '../Shared/FullscreenModal/FullscreenModal';\r\nimport ModalConfirm from '../Shared/ModalConfirm/ModalConfirm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postOneTimeline } from '../../utils/api/timeline';\r\nimport { setTimeout } from 'timers';\r\ninterface Props {\r\n  userId: string;\r\n  match: {\r\n    params: {\r\n      id: string;\r\n    };\r\n  };\r\n}\r\n\r\nfunction TodoInfoContainer({ match, userId }: Props): ReactElement {\r\n  const [todo, setTodo] = useState<TodoAndUser>();\r\n  const [timeline, setTimeline] = useState<any>();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [toggleEditPopup, setToggleEditPopup] = useState(false);\r\n  const [toggleDeletePopup, setToggleDeletePopup] = useState(false);\r\n  const [toggleCompletePopup, setToggleCompletePopup] = useState(false);\r\n  const [toggleMarkAsActiveModal, setToggleMarkAsActivePopup] = useState(false);\r\n  const [users, setUsers] = useState<SelectOption[]>();\r\n  const width = useWindowWidth();\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getTodo();\r\n    getAllUsers();\r\n  }, []);\r\n\r\n  const getAllUsers = async () => {\r\n    try {\r\n      const response = await fetchAllUsers();\r\n\r\n      // Format user to fit the dropdown selection html form\r\n      const formattedUsers = response.data.map(({ name, _id }: User) => {\r\n        return { name, value: _id };\r\n      });\r\n      const users = [{ name: 'Unassigned', value: 'null' }, ...formattedUsers];\r\n      setUsers(users);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOnMarkAsActive = async () => {\r\n    setToggleMarkAsActivePopup(true);\r\n  };\r\n\r\n  const getTodo = async () => {\r\n    const todoId = match.params.id;\r\n    try {\r\n      const response = await fetchOneTodoWithTimeline(todoId);\r\n      setTodo(response.data.todo);\r\n      setTimeline(response.data.timeline);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const handleOnTodoEditClick = () => {\r\n    setToggleEditPopup(true);\r\n  };\r\n\r\n  const handleOnCloseClick = () => {\r\n    setToggleEditPopup(false);\r\n  };\r\n\r\n  const handleOnConfirmDeleteClick = async () => {\r\n    try {\r\n      const response = await deleteOneTodo(match.params.id);\r\n      history.push('/dashboard/user');\r\n    } catch (error) {}\r\n  };\r\n\r\n  const handleOnConfirmCompleteClick = async () => {\r\n    try {\r\n      await updateOneTodo(match.params.id, { completed: true });\r\n      await postOneTimeline('complete', match.params.id);\r\n      history.push('/dashboard/user');\r\n    } catch (error) {\r\n      handleError('Could not set todo as done');\r\n    }\r\n  };\r\n\r\n  const handleError = (error: string) => {\r\n    setError(true);\r\n    setErrorMessage(error);\r\n    setTimeout(() => {\r\n      setError(false);\r\n      setErrorMessage('');\r\n    }, 3500);\r\n  };\r\n\r\n  const handleOnCompleteClick = () => {\r\n    setToggleCompletePopup(true);\r\n  };\r\n\r\n  const handleOnDeleteClick = () => {\r\n    setToggleDeletePopup(true);\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Could not get todos</div>;\r\n  }\r\n\r\n  if (!todo || !users) {\r\n    return <div></div>;\r\n  }\r\n\r\n  const handleOnConfirmActiveClick = async () => {\r\n    try {\r\n      await updateOneTodo(match.params.id, { completed: false });\r\n      const response = await fetchOneTodoWithTimeline(match.params.id);\r\n      setToggleMarkAsActivePopup(false);\r\n      setTimeline(response.data.timeline);\r\n      setTodo(response.data.todo);\r\n    } catch (error) {\r\n      handleError(`Could not set ${todo.title} as active again?`);\r\n    }\r\n  };\r\n\r\n  const handleSaveClick = (changes: EditTodoInterface) => {\r\n    const filteredChanges: any = {};\r\n\r\n    if (changes.title.length > 0) {\r\n      Object.assign(filteredChanges, { title: changes.title });\r\n    }\r\n\r\n    if (changes.description.length > 0) {\r\n      Object.assign(filteredChanges, { description: changes.description });\r\n    }\r\n\r\n    if (changes.difficulty !== todo.difficulty) {\r\n      Object.assign(filteredChanges, { difficulty: changes.difficulty });\r\n    }\r\n\r\n    if (changes.urgency !== todo.urgency) {\r\n      Object.assign(filteredChanges, { urgency: changes.urgency });\r\n    }\r\n\r\n    if (changes.selectedUser.length > 0) {\r\n      if (changes.selectedUser === 'null') {\r\n        Object.assign(filteredChanges, { user: null });\r\n      } else {\r\n        Object.assign(filteredChanges, { user: changes.selectedUser });\r\n      }\r\n    }\r\n\r\n    if (changes.selectedCategory !== todo.category) {\r\n      Object.assign(filteredChanges, { category: changes.selectedCategory });\r\n    }\r\n\r\n    updateTodo(filteredChanges);\r\n  };\r\n\r\n  const updateTodo = async (changes: object) => {\r\n    try {\r\n      await updateOneTodo(todo._id, changes);\r\n      await postOneTimeline('update', match.params.id, changes);\r\n      const newTodo = await fetchOneTodoWithTimeline(match.params.id);\r\n      setTimeline(newTodo.data.timeline);\r\n      setTodo(newTodo.data.todo);\r\n      setToggleEditPopup(false);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-info-page\">\r\n      {todo.user === null || todo.user._id === userId ? (\r\n        <div className=\"todo-info-page-icons\">\r\n          {todo.completed ? (\r\n            <IconHover\r\n              icon={<AiOutlineRedo />}\r\n              onClick={handleOnMarkAsActive}\r\n            />\r\n          ) : (\r\n            <IconHover\r\n              onClick={handleOnCompleteClick}\r\n              icon={<AiOutlineCheck />}\r\n            />\r\n          )}\r\n          <IconHover onClick={handleOnTodoEditClick} icon={<AiFillEdit />} />\r\n          <IconHover onClick={handleOnDeleteClick} icon={<AiFillDelete />} />\r\n        </div>\r\n      ) : null}\r\n      <div className=\"todo-info-bottom\">\r\n        {todo.user === null ? (\r\n          <TodoInfo\r\n            profileImg={userPlaceholder}\r\n            selectedUser={'Unassigned'}\r\n            title={todo.title}\r\n            description={todo.description}\r\n            urgency={todo.urgency}\r\n            difficulty={todo.difficulty}\r\n            category={todo.category}\r\n          />\r\n        ) : (\r\n          <TodoInfo\r\n            profileImg={todo.user.profileImg}\r\n            selectedUser={todo.user.name}\r\n            title={todo.title}\r\n            description={todo.description}\r\n            urgency={todo.urgency}\r\n            difficulty={todo.difficulty}\r\n            category={todo.category}\r\n          />\r\n        )}\r\n        {width > 1025 && <TimelineList timelines={timeline} />}\r\n        {toggleEditPopup && (\r\n          <EditTodo\r\n            users={users}\r\n            todo={todo}\r\n            onSaveClick={(changes) => handleSaveClick(changes)}\r\n            onOutsideClick={handleOnCloseClick}\r\n            onCloseModalClick={handleOnCloseClick}\r\n          />\r\n        )}\r\n        {toggleDeletePopup && (\r\n          <FullscreenModal\r\n            onCloseModalClick={() => setToggleDeletePopup(false)}\r\n            onOutsideClick={() => setToggleDeletePopup(false)}\r\n          >\r\n            <ModalConfirm\r\n              text={`Are you sure you want to delete ${todo.title}`}\r\n              onNoClick={() => setToggleDeletePopup(false)}\r\n              onYesClick={handleOnConfirmDeleteClick}\r\n            />\r\n          </FullscreenModal>\r\n        )}\r\n\r\n        {toggleCompletePopup && (\r\n          <FullscreenModal\r\n            onCloseModalClick={() => setToggleCompletePopup(false)}\r\n            onOutsideClick={() => setToggleCompletePopup(false)}\r\n          >\r\n            <ModalConfirm\r\n              text={`Are you sure you want to mark ${todo.title} as complete`}\r\n              onNoClick={() => setToggleCompletePopup(false)}\r\n              onYesClick={handleOnConfirmCompleteClick}\r\n            />\r\n          </FullscreenModal>\r\n        )}\r\n        {toggleMarkAsActiveModal && (\r\n          <FullscreenModal\r\n            onCloseModalClick={() => setToggleCompletePopup(false)}\r\n            onOutsideClick={() => setToggleCompletePopup(false)}\r\n          >\r\n            <ModalConfirm\r\n              text={`Are you sure you want to mark ${todo.title} as active again`}\r\n              onNoClick={() => setToggleMarkAsActivePopup(false)}\r\n              onYesClick={handleOnConfirmActiveClick}\r\n            />\r\n          </FullscreenModal>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  userId: state.userInfo.user.id,\r\n});\r\n\r\nexport default connect(mapStateToProps)(TodoInfoContainer);\r\n","import React, { ReactElement, useEffect, useState, useRef } from 'react';\r\nimport { Route, Switch, Redirect, useLocation } from 'react-router-dom';\r\nimport NavbarContainer from './components/Navbar/Navbar.container';\r\nimport UserDashboardContainer from './components/Dashboard/UserDashboard.container';\r\nimport { connect } from 'react-redux';\r\nimport { startAuthUser } from './redux/user/user.actions';\r\nimport UserProfile from './components/Shared/UserProfile/UserProfile';\r\nimport Layout from './components/Shared/Layout/Layout';\r\nimport CreateTodoContainer from './components/CreateTodo/CreateTodo.container';\r\nimport TeamChatContainer from './components/Chat/TeamChat.container';\r\nimport TeamDashboardContainer from './components/Dashboard/TeamDashboard.container';\r\nimport TodoInfoContainer from './components/TodoInfo/TodoInfo.container';\r\nimport { filterTodos } from './redux/user-todos/user-todo.actions';\r\nimport LoadingSpinner from './components/Shared/LoadingSpinner/LoadingSpinner';\r\nimport FailedFetch from './components/Shared/FailedFetch/FailedFetch';\r\nimport io from 'socket.io-client';\r\nimport { AxiosPromise } from 'axios';\r\ninterface Props {\r\n  startAuthUser: () => AxiosPromise;\r\n  authenticated: boolean;\r\n  loading: boolean;\r\n  id: string;\r\n}\r\n\r\nlet socket: any;\r\n\r\nfunction PrivateRoutes({\r\n  authenticated,\r\n  startAuthUser,\r\n  loading,\r\n  id,\r\n}: Props): ReactElement {\r\n  \r\n  const [socketz, setSocketz] = useState(false)\r\n  \r\n  useEffect(() => {\r\n   startAuthUser()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const URL = process.env.PORT || `http://localhost:4000/`\r\n    socket = io(URL)\r\n\r\n\r\n    return () => socket.emit(\"disconnect\")\r\n  }, [])\r\n\r\n\r\n  if (loading) {\r\n    return <div></div>;\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {authenticated ? (\r\n        <>\r\n          <Layout socket={socket}>\r\n            <Switch>\r\n              <Route\r\n                path=\"/todo/create\"\r\n                exact\r\n                render={(props) => (\r\n                  <CreateTodoContainer socket={socket} match={props.match} />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/dashboard/user\"\r\n                component={UserDashboardContainer}\r\n              />\r\n              <Route path=\"/todo/:id\" exact component={TodoInfoContainer} />\r\n              <Route\r\n                exact\r\n                path=\"/messages/team\"\r\n                render={(props) => <TeamChatContainer socket={socket} />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/dashboard/team\"\r\n                component={TeamDashboardContainer}\r\n              />\r\n            </Switch>\r\n          </Layout>\r\n        </>\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  authenticated: state.userInfo.authenticated,\r\n  loading: state.userInfo.loading,\r\n  id: state.userInfo.user.id,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  startAuthUser: () => dispatch(startAuthUser()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoutes);\r\n","import React, { useEffect, useState } from 'react';\n\nimport LoginContainer from './components/Login/Login.container';\nimport UserDashboardContainer from './components/Dashboard/UserDashboard.container';\nimport NavbarSmall from './components/Navbar/NavbarSmall';\nimport { startAuthUser } from './redux/user/user.actions';\nimport { connect } from 'react-redux';\nimport {\n  Route,\n  Redirect,\n  BrowserRouter as Router,\n  Switch,\n  useHistory,\n} from 'react-router-dom';\nimport PrivateRoutes from './PrivateRoutes';\nimport io from 'socket.io-client';\ninterface Props {}\n\nlet socket: any;\nfunction App({}: Props) {\n  return (\n    <>\n      <Router>\n        <PrivateRoutes />\n        <Route exact path=\"/login\" component={LoginContainer} />\n      </Router>\n    </>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { User } from './user.types';\r\nimport { Action } from 'redux';\r\n\r\nconst DEFAULT_STATE: User = {\r\n  user: {\r\n    name: null,\r\n    profileImg: null,\r\n    id: null,\r\n    team: null,\r\n  },\r\n  loading: true,\r\n  error: false,\r\n  authenticated: false,\r\n};\r\n\r\ninterface ActionInterface {\r\n  type: string;\r\n  user: {\r\n    _id: number;\r\n    name: string;\r\n    profileImg: string;\r\n    team: string,\r\n  };\r\n}\r\n\r\nexport default (state = DEFAULT_STATE, action: ActionInterface) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_USER':\r\n      return {...state};\r\n\r\n    case 'LOGOUT_USER':\r\n      return {\r\n        ...state,\r\n        authenticated: false,\r\n        user: { id: null, profileImg: null, name: null, team: null },\r\n      };\r\n\r\n    case 'LOGIN_REQUEST_LOADING':\r\n      return { ...state, loading: true, error: false };\r\n\r\n    case 'LOGIN_REQUEST_FAILED':\r\n      return { ...state, loading: false, error: true };\r\n\r\n    case 'LOGIN_REQUEST_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: {\r\n          name: action.user.name,\r\n          id: action.user._id,\r\n          profileImg: action.user.profileImg,\r\n          team: action.user.team\r\n        },\r\n        loading: false,\r\n        error: false,\r\n        authenticated: true,\r\n      };\r\n\r\n    case 'AUTH_REQUEST_FAILED':\r\n      return { ...state, authenticated: false, loading:false };\r\n\r\n    case 'AUTH_REQUEST_SUCCESS':\r\n      \r\n      return {\r\n        ...state,\r\n        authenticated: true,\r\n        loading: false,\r\n        user: {\r\n          name: action.user.name,\r\n          id: action.user._id,\r\n          profileImg: action.user.profileImg,\r\n          team: action.user.team\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","interface TodoAction {\r\n  type: string;\r\n  todos: object[];\r\n  filter?: string;\r\n  sort?: string;\r\n  search?: string;\r\n}\r\n\r\nconst DEFAULT_STATE = {\r\n  todos: [],\r\n  error: false,\r\n  loading: false,\r\n  filter: 'All',\r\n  sort: 'oldest',\r\n  search: '',\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, action: TodoAction) => {\r\n  switch (action.type) {\r\n    case 'TODOS_REQUEST_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        todos: [...action.todos],\r\n      };\r\n\r\n\r\n    case 'TODOS_REQUEST_FAILED':\r\n      return { ...state, error: true, loading: false };\r\n\r\n    case 'TODOS_REQUEST_LOADING':\r\n      return { ...state, error: false, loading: true };\r\n\r\n    case 'SET_FILTER':\r\n      return { ...state, filter: action.filter };\r\n\r\n    case 'SET_SORT':\r\n      return { ...state, sort: action.sort };\r\n\r\n    case 'SET_SEARCH':\r\n      \r\n      return { ...state, search: action.search };\r\n\r\n    case 'SEARCH_TODOS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        todos: action.todos.filter((todo: any) => {\r\n          return Object.values(todo).indexOf(state.search) > -1;\r\n        }),\r\n      };\r\n\r\n    case 'FILTER_TODOS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        todos: action.todos.filter((todo: any) => {\r\n          // Checks if fitler value exist in todo\r\n          return todo.category === state.filter;\r\n        }),\r\n      };\r\n    case 'SORT_TODOS_ASC':\r\n      return {\r\n        ...state,\r\n        todos: state.todos.slice().sort((a: any, b:any) => {\r\n          return a[state.sort] - b[state.sort] \r\n        })\r\n      };\r\n\r\n      case 'SORT_TODOS_CREATED_AT_NEWEST':\r\n        return {\r\n          ...state,\r\n          todos: [...state.todos].sort((a: any, b: any) => {\r\n            return -new Date(a.createdAt) + -new Date(b.createdAt)\r\n          })\r\n        }\r\n\r\n        case 'SORT_TODOS_CREATED_AT_OLDEST':\r\n\r\n          return {\r\n            ...state,\r\n            todos: [...state.todos].sort((a: any, b: any) => {\r\n              return +new Date(a.createdAt) - +new Date(b.createdAt)\r\n            })\r\n          }\r\n\r\n        case 'SORT_TODOS_URGENCY_DSC': \r\n        \r\n        return {\r\n          ...state,\r\n          todos: [...state.todos].sort((a: any, b: any) => {\r\n            return a.urgency + b.urgency\r\n          })\r\n        }\r\n\r\n        case 'SORT_TODOS_DIFFICULTY_DSC':  \r\n        \r\n        return {\r\n          ...state,\r\n          todos: [...state.todos].sort((a: any, b: any) => {\r\n            return a.difficulty + b.difficulty\r\n          })\r\n        }\r\n\r\n      case 'SORT_TODOS_DSC':\r\n        return {\r\n          ...state,\r\n          todos: [...state.todos].sort((a: any, b:any) => {\r\n            return a[state.sort] - b[state.sort] \r\n          })\r\n        };\r\n\r\n\r\n      case 'CLEAR_STATE': {\r\n        return {...DEFAULT_STATE}\r\n      }\r\n        \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const DEFAULT_STATE = {\r\n  messages: [],\r\n  messagesLoading: false,\r\n  messagesError: false,\r\n  skip: 0,\r\n  limit: 15,\r\n  numberOfResponses: 0,\r\n  allMessagesSeen: false, \r\n};\r\n\r\nexport default (state = DEFAULT_STATE, action: any) => {\r\n  switch (action.type) {\r\n    case 'GET_USER_MESSAGES':\r\n      return { ...state };\r\n\r\n    case 'MESSAGE_REQUEST_LOADING':\r\n      return { ...state, messagesLoading: true };\r\n\r\n    case 'MESSAGE_REQUEST_SUCCESS':\r\n      return {\r\n        ...state,\r\n        messages: [...action.messages, ...state.messages],\r\n        messagesError: false,\r\n        messagesLoading: false,\r\n        numberOfResponses: action.messages.length\r\n      };\r\n\r\n    case \"INCREMENT_SKIP\": \r\n    return {\r\n      ...state,\r\n      skip: state.skip + 15,\r\n    }\r\n\r\n\r\n    case \"ADD_ONE_MESSAGE\": \r\n    return {\r\n      ...state,\r\n      skip: state.skip + 1, \r\n      numberOfResponses: 1,\r\n      messages: [...state.messages, action.message]\r\n    }\r\n\r\n\r\n    case \"ALL_MESSAGES_SEEN\": \r\n    return {\r\n      ...state, \r\n      allMessagesSeen: true,\r\n      skip: state.skip\r\n    }\r\n\r\n    case \"REMOVE_CHAT_MESSAGES\":\r\n      return {...DEFAULT_STATE}\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","const DEFAULT_STATE = {\r\n  notifications: [],\r\n  notificationsError: false,\r\n  notificationsLoading: false,\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, action: any) => {\r\n  switch (action.type) {\r\n    case 'GET_NOTIFICATIONS':\r\n      return { ...state };\r\n\r\n    case 'NOTIFICATION_REQUEST_LOADING':\r\n      return {\r\n        ...state,\r\n        notificationsError: false,\r\n        notificationsLoading: true,\r\n      };\r\n\r\n    case 'NOTIFICATION_REQUEST_FAILED':\r\n      return {\r\n        ...state,\r\n        notificationsError: true,\r\n        notificationsLoading: false,\r\n      };\r\n\r\n    case 'NOTIFICATION_REQUEST_SUCCESS':\r\n\r\n      return {\r\n        ...state,\r\n        notifications: [...action.notifications],\r\n        notificationsError: false,\r\n        notificationsLoading: false,\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","interface TodoAction {\r\n  type: string;\r\n  todos: object[];\r\n  filter?: string;\r\n  sort?: string;\r\n  search?: string;\r\n}\r\n\r\nconst DEFAULT_STATE = {\r\n  todos: [],\r\n  error: false,\r\n  loading: false,\r\n  filter: 'All',\r\n  sort: 'oldest',\r\n  search: '',\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, action: TodoAction) => {\r\n  switch (action.type) {\r\n    case 'TODOS_REQUEST_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        todos: [...action.todos],\r\n      };\r\n\r\n\r\n    case 'TODOS_REQUEST_FAILED':\r\n      return { ...state, error: true, loading: false };\r\n\r\n    case 'TODOS_REQUEST_LOADING':\r\n      return { ...state, error: false, loading: true };\r\n\r\n    case 'SET_FILTER':\r\n      return { ...state, filter: action.filter };\r\n\r\n    case 'SET_SORT':\r\n      return { ...state, sort: action.sort };\r\n\r\n    case 'SET_SEARCH':\r\n      \r\n      return { ...state, search: action.search };\r\n\r\n    case 'SEARCH_TODOS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        todos: action.todos.filter((todo: any) => {\r\n          return Object.values(todo).indexOf(state.search) > -1;\r\n        }),\r\n      };\r\n\r\n    case 'FILTER_TODOS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        todos: action.todos.filter((todo: any) => {\r\n          // Checks if fitler value exist in todo\r\n          return todo.category === state.filter;\r\n        }),\r\n      };\r\n    case 'SORT_TODOS_ASC':\r\n      return {\r\n        ...state,\r\n        todos: state.todos.slice().sort((a: any, b:any) => {\r\n          return a[state.sort] - b[state.sort] \r\n        })\r\n      };\r\n\r\n      case 'SORT_TODOS_CREATED_AT_NEWEST':\r\n        return {\r\n          ...state,\r\n          todos: [...state.todos].sort((a: any, b: any) => {\r\n            return -new Date(a.createdAt) + -new Date(b.createdAt)\r\n          })\r\n        }\r\n\r\n        case 'SORT_TODOS_CREATED_AT_OLDEST':\r\n\r\n          return {\r\n            ...state,\r\n            todos: [...state.todos].sort((a: any, b: any) => {\r\n              return +new Date(a.createdAt) - +new Date(b.createdAt)\r\n            })\r\n          }\r\n\r\n        case 'SORT_TODOS_URGENCY_DSC': \r\n        \r\n        return {\r\n          ...state,\r\n          todos: [...state.todos].sort((a: any, b: any) => {\r\n            return a.urgency + b.urgency\r\n          })\r\n        }\r\n\r\n        case 'SORT_TODOS_DIFFICULTY_DSC':  \r\n        \r\n        return {\r\n          ...state,\r\n          todos: [...state.todos].sort((a: any, b: any) => {\r\n            return a.difficulty + b.difficulty\r\n          })\r\n        }\r\n\r\n      case 'SORT_TODOS_DSC':\r\n        return {\r\n          ...state,\r\n          todos: [...state.todos].sort((a: any, b:any) => {\r\n            return a[state.sort] - b[state.sort] \r\n          })\r\n        };\r\n\r\n\r\n      case 'CLEAR_STATE': {\r\n        return {...DEFAULT_STATE}\r\n      }\r\n        \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const DEFAULT_STATE = {\r\n  messages: [],\r\n  messagesLoading: true,\r\n  messagesError: false,\r\n  limit: 15,\r\n  skip: 0,\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, action: any) => {\r\n  switch (action.type) {\r\n    case 'DASHBOARD_GET_USER_MESSAGES':\r\n      return { ...state };\r\n\r\n    case 'DASHBOARD_MESSAGE_REQUEST_LOADING':\r\n      return { ...state, messagesLoading: true };\r\n\r\n    case 'DASHBOARD_MESSAGE_REQUEST_SUCCESS':\r\n      return {\r\n        ...state,\r\n        messages: [...action.messages],\r\n        messagesError: false,\r\n        messagesLoading: false,\r\n      };\r\n\r\n    case 'ADD_MESSAGE_AND_REMOVE_OLDEST': \r\n    return {\r\n      ...state,\r\n      messages: [...state.messages.slice(1), action.message]\r\n    }\r\n    case 'ADD_MESSAGE': \r\n    return {\r\n      ...state, \r\n    messages: [...state.messages, action.message]\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import {combineReducers} from 'redux'\nimport userReducer from './user/user.reducer'\nimport userTodoReducer from './user-todos/user-todo.reducer'\nimport teamMessagesReducer from './team-chat/team-chat.reducer'\nimport NotificationsReducer from './notifications/notifications.reducer'\nimport teamTodoReducer from './team-todos/team-todos.reducer'\nimport dashboardMessagesReducer from './dashboard-chat/dashboard-chat.reducer'\nexport default combineReducers({\n    userInfo: userReducer,\n    userTodoInfo: userTodoReducer,\n    teamTodoInfo: teamTodoReducer,\n    dashboardMessagesInfo: dashboardMessagesReducer,\n    teamMessagesInfo:  teamMessagesReducer,\n    notificationsInfo: NotificationsReducer\n})","import {createStore, applyMiddleware} from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport rootReducer from './root-reducer'\nconst middlewares = [thunk]\n\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/variables.css';\nimport './stylesheets/reset.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nReactDOM.render(\n  <React.StrictMode>\n        <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/hero.7420149b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading-spinner.991119f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/placeholder-user.0b846be3.svg\";"],"sourceRoot":""}